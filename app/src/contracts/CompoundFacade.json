{
  "contractName": "CompoundFacade",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mintingAsset",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "facade",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        }
      ],
      "name": "LogDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "facade",
          "type": "address"
        }
      ],
      "name": "LogWithdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "assistant",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingAsset",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingAsset",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToUnderlying",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destroy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingAssetSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintedAssetSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mintingAsset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"facade\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"LogDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"facade\",\"type\":\"address\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assistant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToUnderlying\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedAssetSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingAsset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAsset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingAssetSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Joel Reis\",\"details\":\"This can be used as an example for generating other DeFi facade interfaces\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Deploys a new `Facade` that interfaces directly against the Compound protocol\",\"params\":{\"_mintingAsset\":\"The address of the token that Compound will mint, based on the underlying token (e.g. `cUSDC`)\",\"_owner\":\"The address of who should own this contract\",\"_underlyingAsset\":\"The address of the underlying asset (e.g. `USDC`)\"}},\"depositToUnderlying()\":{\"details\":\"Deposits the asset associated with the asset pair\"},\"destroy()\":{\"details\":\"This should be a protected function to prevent abuse of withdrawing      Withdrawing should always deposit funds back to the `owner`\"},\"mintedAssetSymbol()\":{\"details\":\"Should forward requests to the minting token\",\"returns\":{\"_0\":\"The symbol for the minted token that is available for withdrawing\"}},\"mintedBalance()\":{\"details\":\"Should forward requests to the minting token e.g. cUSDC, cDAI\",\"returns\":{\"_0\":\"The amount of the minted balance that is available for withdrawing\"}},\"underlyingAssetSymbol()\":{\"details\":\"Should forward requests to the underlying token\",\"returns\":{\"_0\":\"The symbol for the underlying token that is available for deposit\"}},\"underlyingBalance()\":{\"details\":\"Should forward requests to the underlying token\",\"returns\":{\"_0\":\"The amount of the underlying token that is available for deposit\"}},\"withdraw()\":{\"details\":\"This should be a protected function to prevent abuse of withdrawing      Withdrawing should always deposit funds back to the `owner`\"}},\"stateVariables\":{\"assistant\":{\"details\":\"Returns the pre-defined, unedited assistant\",\"return\":\"Assistant hich is permissioned to call specific functions\"},\"mintingAsset\":{\"details\":\"Returns an ERC20 token that is minted from Compound\",\"return\":\"The token that a specific DeFi protocols mints\"},\"owner\":{\"details\":\"The owner of this contract, set from deployer and unchangable\",\"return\":\"The address with the most authority on this contract\"},\"underlyingAsset\":{\"details\":\"Returns an ERC20 token that is used to deposit into Compound\",\"return\":\"The underlying token used\"}},\"title\":\"A compound.finance facade implementation\",\"version\":1},\"userdoc\":{\"events\":{\"LogDeposit(address,address)\":{\"notice\":\"An event used to communicate that a \\\"Deposit\\\" was performed\"},\"LogWithdraw(address)\":{\"notice\":\"An event used to communicate a \\\"Withdrawal\\\" was performed\"}},\"kind\":\"user\",\"methods\":{\"assistant()\":{\"notice\":\"Returns an address that is allowed to assist in certain functions to help with automation         This address never has full control over funds         e.g. sending funds back to `owner`'s wallet.\"},\"constructor\":{\"notice\":\"Constructor for a new `CompoundFacade` deployment\"},\"depositToUnderlying()\":{\"notice\":\"This deposits funds into the underlying contract\"},\"destroy()\":{\"notice\":\"Destroys a given `Facade`, is protected\"},\"mintedAssetSymbol()\":{\"notice\":\"This is available directly on the asset address, but is added for convenience\"},\"mintedBalance()\":{\"notice\":\"This is available directly on the asset address, but is added for convenience\"},\"mintingAsset()\":{\"notice\":\"Returns the address of the token being minted         e.g. cUSDC address\"},\"owner()\":{\"notice\":\"The owner of this contract\"},\"underlyingAsset()\":{\"notice\":\"Returns the underlying token         e.g. USDC address\"},\"underlyingAssetSymbol()\":{\"notice\":\"This is available directly on the asset address, but is added for convenience\"},\"underlyingBalance()\":{\"notice\":\"This is available directly on the asset address, but is added for convenience\"},\"withdraw()\":{\"notice\":\"Withdraws all user funds, is protected\"}},\"notice\":\"Interfaces directly with compound.finance\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol\":\"CompoundFacade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/metroid/Development/Block/Final_Project/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x6bf31f9696663b072577ea8d27c036c61dead4f4e708abe651a37a9eef6616e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781a75a19e604e0c02258ac6866de98a76768b12ddf29c06422871fd5c81fa56\",\"dweb:/ipfs/QmaUsTPLTVD4U6AGvm5wEjrqH5Sh6As6XQQp3PEtVzbT9e\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol\":{\"keccak256\":\"0x147a55a184fb1eb119ddb0fd1d3c704084c93251e73296100f9b4e2c59569d30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e973af4f05c57c76d3f91408eceef0afa85d342e726b275f2715def2be378e28\",\"dweb:/ipfs/QmYJk4B57Fh9tpCNUjCKt7Rzz9egTwA1b2ntgQsXDJ1A8b\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Facades/FacadeInterface.sol\":{\"keccak256\":\"0xbb8bf70cbec66a32707e20d8d3c487d85044a34bb1ebe3d6a2422817aaf75d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdb3a1cc7f3150b973d8761ef67bd882139c89ee9c2684e360c09ecd070ed1e7\",\"dweb:/ipfs/Qmaaw7tgbMMH4SY8WTBAvn7sP5kzoe5UususTus3yoqBob\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161130a38038061130a8339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561023057600080fd5b505af1158015610244573d6000803e3d6000fd5b505050506040513d602081101561025a57600080fd5b81019080805190602001909291905050505050505061108c8061027e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806359356c5c1161007157806359356c5c146101ad5780637158da7c146101cb57806383197ef0146101ff5780638da5cb5b14610209578063906a3dd01461023d578063ad7b68fe146102c0576100a9565b806302248209146100ae5780632569cd6c146100b857806333340e8e146100ec5780633ccfd60b1461016f57806350906f2a14610179575b600080fd5b6100b66102de565b005b6100c061057b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f46105a1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610177610709565b005b610181610bf7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b5610c1d565b6040518082815260200191505060405180910390f35b6101d3610ce8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610207610d0e565b005b610211610dff565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610245610e23565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028557808201518184015260208101905061026a565b50505050905090810190601f1680156102b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c8610f8b565b6040518082815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561036957600080fd5b505afa15801561037d573d6000803e3d6000fd5b505050506040513d602081101561039357600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fa0712d68000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b602083106104a75780518252602082019150602081019050602083039250610484565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b505090508061051c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167febfb0d0230732d2051fdbe3e95732ec7730ffa637c3985d7ccccd459555941a360405160405180910390a3505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561064957600080fd5b810190808051604051939291908464010000000082111561066957600080fd5b8382019150602082018581111561067f57600080fd5b825186600182028301116401000000008211171561069c57600080fd5b8083526020830192505050908051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b50604052505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107b05750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107b957600080fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561084457600080fd5b505afa158015610858573d6000803e3d6000fd5b505050506040513d602081101561086e57600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fdb006a75000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b60208310610982578051825260208201915060208101905060208303925061095f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109e4576040519150601f19603f3d011682016040523d82523d6000602084013e6109e9565b606091505b50509050806109f757600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b81019080805190602001909291905050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b8101908080519060200190929190505050503073ffffffffffffffffffffffffffffffffffffffff167faf66eb1ff59a99165e990351acac53ab2fbc78bf79381392dd75b57ed2b8c40c60405160405180910390a250505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d6020811015610cd257600080fd5b8101908080519060200190929190505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610db55750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610dbe57600080fd5b610dc6610709565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ecb57600080fd5b8101908080516040519392919084640100000000821115610eeb57600080fd5b83820191506020820185811115610f0157600080fd5b8251866001820283011164010000000082111715610f1e57600080fd5b8083526020830192505050908051906020019080838360005b83811015610f52578082015181840152602081019050610f37565b50505050905090810190601f168015610f7f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b810190808051906020019092919050505090509056fea26469706673582212204fa428026f7ecce8d95f01ab321cd7e2efa1af48e91e0d2cc491ee943a9eab3764736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806359356c5c1161007157806359356c5c146101ad5780637158da7c146101cb57806383197ef0146101ff5780638da5cb5b14610209578063906a3dd01461023d578063ad7b68fe146102c0576100a9565b806302248209146100ae5780632569cd6c146100b857806333340e8e146100ec5780633ccfd60b1461016f57806350906f2a14610179575b600080fd5b6100b66102de565b005b6100c061057b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f46105a1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610177610709565b005b610181610bf7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b5610c1d565b6040518082815260200191505060405180910390f35b6101d3610ce8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610207610d0e565b005b610211610dff565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610245610e23565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028557808201518184015260208101905061026a565b50505050905090810190601f1680156102b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c8610f8b565b6040518082815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561036957600080fd5b505afa15801561037d573d6000803e3d6000fd5b505050506040513d602081101561039357600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fa0712d68000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b602083106104a75780518252602082019150602081019050602083039250610484565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b505090508061051c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167febfb0d0230732d2051fdbe3e95732ec7730ffa637c3985d7ccccd459555941a360405160405180910390a3505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561064957600080fd5b810190808051604051939291908464010000000082111561066957600080fd5b8382019150602082018581111561067f57600080fd5b825186600182028301116401000000008211171561069c57600080fd5b8083526020830192505050908051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b50604052505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107b05750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107b957600080fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561084457600080fd5b505afa158015610858573d6000803e3d6000fd5b505050506040513d602081101561086e57600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fdb006a75000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b60208310610982578051825260208201915060208101905060208303925061095f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109e4576040519150601f19603f3d011682016040523d82523d6000602084013e6109e9565b606091505b50509050806109f757600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b81019080805190602001909291905050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b8101908080519060200190929190505050503073ffffffffffffffffffffffffffffffffffffffff167faf66eb1ff59a99165e990351acac53ab2fbc78bf79381392dd75b57ed2b8c40c60405160405180910390a250505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d6020811015610cd257600080fd5b8101908080519060200190929190505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610db55750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610dbe57600080fd5b610dc6610709565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ecb57600080fd5b8101908080516040519392919084640100000000821115610eeb57600080fd5b83820191506020820185811115610f0157600080fd5b8251866001820283011164010000000082111715610f1e57600080fd5b8083526020830192505050908051906020019080838360005b83811015610f52578082015181840152602081019050610f37565b50505050905090810190601f168015610f7f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b810190808051906020019092919050505090509056fea26469706673582212204fa428026f7ecce8d95f01ab321cd7e2efa1af48e91e0d2cc491ee943a9eab3764736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "332:5249:2:-:0;;;2666:431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2769:6;2761:5;;:14;;;;;;;;;;;;;;;;;;2797:10;2785:9;;:22;;;;;;;;;;;;;;;;;;2850:16;2826:15;;:41;;;;;;;;;;;;;;;;;;2898:13;2877:12;;:35;;;;;;;;;;;;;;;;;;3035:15;;;;;;;;;;;:23;;;3067:12;;;;;;;;;;;442:10;3035:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2666:431;;;332:5249;;;;;;",
  "deployedSourceMap": "332:5249:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:405;;;:::i;:::-;;1050:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5204:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3680:558;;;:::i;:::-;;1544:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4703:131;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1280:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4323:187;;;:::i;:::-;;650:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5454:120;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4957:124;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3191:405;3250:19;3272:15;;;;;;;;;;;:25;;;3306:4;3272:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3250:62;;3372:20;3436:11;3395:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3372:76;;3459:12;3484;;;;;;;;;;;3476:26;;3503:7;3476:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3458:53;;;3529:7;3521:16;;;;;;3578:10;3552:37;;3571:4;3552:37;;;;;;;;;;;;3191:405;;;:::o;1050:24::-;;;;;;;;;;;;;:::o;5204:127::-;5268:13;5300:15;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5293:31;;5204:127;:::o;3680:558::-;2176:5;;;;;;;;;;2162:19;;:10;:19;;;:46;;;;2199:9;;;;;;;;;;;2185:23;;:10;:23;;;2162:46;2154:55;;;;;;3776:19:::1;3798:12;;;;;;;;;;;:22;;;3829:4;3798:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;3776:59;;3845:20;3911:11;3868:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3845:78;;3934:12;3959;;;;;;;;;;;3951:26;;3978:7;3951:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3933:53;;;4004:7;3996:16;;;::::0;::::1;;4081:15;4099;;;;;;;;;;;:25;;;4133:4;4099:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;4081:58;;4149:15;;;;;;;;;;;:24;;;4174:5;::::0;::::1;;;;;;;;4181:7;4149:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;4225:4;4205:26;;;;;;;;;;;;2219:1;;;;3680:558::o:0;1544:25::-;;;;;;;;;;;;;:::o;4703:131::-;4763:7;4787:15;;;;;;;;;;;:25;;;4821:4;4787:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:47;;4703:131;:::o;1280:28::-;;;;;;;;;;;;;:::o;4323:187::-;2176:5;;;;;;;;;;2162:19;;:10;:19;;;:46;;;;2199:9;;;;;;;;;;;2185:23;;:10;:23;;;2162:46;2154:55;;;;;;4415:10:::1;:8;:10::i;:::-;4497:5;::::0;::::1;;;;;;;;4484:19;;;650:28:::0;;;;;;;;;;;;:::o;5454:120::-;5514:13;5546:12;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5539:28;;5454:120;:::o;4957:124::-;5013:7;5037:12;;;;;;;;;;;:22;;;5068:4;5037:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5030:44;;4957:124;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport '../ERC20/IERC20.sol';\nimport './FacadeInterface.sol';\n\n/// @title A compound.finance facade implementation\n/// @author Joel Reis\n/// @notice Interfaces directly with compound.finance\n/// @dev This can be used as an example for generating other DeFi facade interfaces\ncontract CompoundFacade is Facade {\n    // This is the max value for a uint256\n    uint256 constant MAX_INT = 2**256 - 1;\n    \n    /// @notice The owner of this contract\n    /// @dev The owner of this contract, set from deployer and unchangable\n    /// @return The address with the most authority on this contract\n    address payable public owner;\n    \n    /// @notice Returns an address that is allowed to assist in certain functions to help with automation\n    ///         This address never has full control over funds\n    ///         e.g. sending funds back to `owner`'s wallet.\n    /// @dev Returns the pre-defined, unedited assistant\n    /// @return Assistant hich is permissioned to call specific functions\n    address public assistant;\n    \n    /// @notice Returns the underlying token\n    ///         e.g. USDC address\n    /// @dev Returns an ERC20 token that is used to deposit into Compound\n    /// @return The underlying token used\n    ERC20 public underlyingAsset;\n    \n    /// @notice Returns the address of the token being minted\n    ///         e.g. cUSDC address\n    /// @dev Returns an ERC20 token that is minted from Compound\n    /// @return The token that a specific DeFi protocols mints\n    ERC20 public mintingAsset;\n    \n    // Modifiers\n    \n    /// @notice Checks to make sure only the contract owner (deployer) can call a specific function\n    /// @dev The contract deployer has certain elevated permissions, which can be checked here.\n    modifier isOwner() {\n        require(msg.sender == owner, \"Caller is not owner\");\n        _;\n    }\n    \n    /// @notice Checks to make sure the caller is friendly and is approved by owner to perform actions\n    /// @dev Certain permissions require either the owner or assistant to perform them. This checks those roles.\n    modifier isFriendly() {\n        require(msg.sender == owner || msg.sender == assistant);\n        _;\n    }\n    \n    /// @notice Constructor for a new `CompoundFacade` deployment\n    /// @dev Deploys a new `Facade` that interfaces directly against the Compound protocol\n    /// @param _owner The address of who should own this contract\n    /// @param _underlyingAsset The address of the underlying asset (e.g. `USDC`)\n    /// @param _mintingAsset The address of the token that Compound will mint, based on the underlying token (e.g. `cUSDC`)\n    constructor(address payable _owner, address _underlyingAsset, address _mintingAsset) {\n        owner = _owner;\n        assistant = msg.sender;\n        \n        underlyingAsset = ERC20(_underlyingAsset);\n        mintingAsset = ERC20(_mintingAsset);\n        \n        // This approves the contract (e.g. compound) to withdraw funds from the smart contract account\n        underlyingAsset.approve(address(mintingAsset), MAX_INT);\n    }\n    \n    /// This deposits funds into the underlying contract\n    /// @inheritdoc Facade\n    function depositToUnderlying() override external {\n        uint256 fullBalance = underlyingAsset.balanceOf(address(this));\n        \n        // TODO: Enable reward!\n        \n        bytes memory payload = abi.encodeWithSignature(\"mint(uint256)\", fullBalance);\n        (bool success,) = address(mintingAsset).call(payload);\n        require(success);\n        emit LogDeposit(address(this), msg.sender);\n    }\n    \n    /// Withdraws all user funds, is protected\n    /// @inheritdoc Facade\n    function withdraw() override public isFriendly {\n        // Pull assets out of Compound\n        uint256 fullBalance = mintingAsset.balanceOf(address(this));\n        bytes memory payload = abi.encodeWithSignature(\"redeem(uint256)\", fullBalance);\n        (bool success,) = address(mintingAsset).call(payload);\n        require(success);\n        \n        // Actual, direct transfer to user wallet\n        uint256 allUSDC = underlyingAsset.balanceOf(address(this));\n        underlyingAsset.transfer(owner, allUSDC);\n\n        emit LogWithdraw(address(this));\n    }\n    \n    /// Destroys a given `Facade`, is protected\n    /// @inheritdoc Facade\n    function destroy() override external isFriendly {\n        // Secure all ERC20 funds\n        withdraw();\n        \n        // Should be no ETH in contract\n        selfdestruct(owner);\n    }\n\n    ////// Convenience functions that forward to the underlying contract\n\n    /// This is available directly on the asset address, but is added for convenience\n    /// @inheritdoc Facade\n    function underlyingBalance() override external view returns(uint256) {\n      return underlyingAsset.balanceOf(address(this));\n    }\n    \n    /// This is available directly on the asset address, but is added for convenience\n    /// @inheritdoc Facade\n    function mintedBalance() override external view returns(uint256) {\n      return mintingAsset.balanceOf(address(this));\n    }\n    \n    /// This is available directly on the asset address, but is added for convenience\n    /// @inheritdoc Facade\n    function underlyingAssetSymbol() override external view returns(string memory) {\n        return underlyingAsset.symbol();\n    }\n    \n    /// This is available directly on the asset address, but is added for convenience\n    /// @inheritdoc Facade\n    function mintedAssetSymbol() override external view returns(string memory) {\n        return mintingAsset.symbol();\n    }\n    \n}",
  "sourcePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol",
  "ast": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol",
    "exportedSymbols": {
      "CompoundFacade": [
        617
      ]
    },
    "id": 618,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 338,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 339,
        "nodeType": "ImportDirective",
        "scope": 618,
        "sourceUnit": 88,
        "src": "57:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/FacadeInterface.sol",
        "file": "./FacadeInterface.sol",
        "id": 340,
        "nodeType": "ImportDirective",
        "scope": 618,
        "sourceUnit": 670,
        "src": "87:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 342,
              "name": "Facade",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 669,
              "src": "359:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Facade_$669",
                "typeString": "contract Facade"
              }
            },
            "id": 343,
            "nodeType": "InheritanceSpecifier",
            "src": "359:6:2"
          }
        ],
        "contractDependencies": [
          669
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 341,
          "nodeType": "StructuredDocumentation",
          "src": "120:212:2",
          "text": "@title A compound.finance facade implementation\n @author Joel Reis\n @notice Interfaces directly with compound.finance\n @dev This can be used as an example for generating other DeFi facade interfaces"
        },
        "fullyImplemented": true,
        "id": 617,
        "linearizedBaseContracts": [
          617,
          669
        ],
        "name": "CompoundFacade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 350,
            "mutability": "constant",
            "name": "MAX_INT",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "415:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "415:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 347,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 345,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "442:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 346,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "445:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "442:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 348,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "451:1:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "442:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 351,
              "nodeType": "StructuredDocumentation",
              "src": "463:182:2",
              "text": "@notice The owner of this contract\n @dev The owner of this contract, set from deployer and unchangable\n @return The address with the most authority on this contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 353,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "650:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 352,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "650:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 354,
              "nodeType": "StructuredDocumentation",
              "src": "689:356:2",
              "text": "@notice Returns an address that is allowed to assist in certain functions to help with automation\n         This address never has full control over funds\n         e.g. sending funds back to `owner`'s wallet.\n @dev Returns the pre-defined, unedited assistant\n @return Assistant hich is permissioned to call specific functions"
            },
            "functionSelector": "2569cd6c",
            "id": 356,
            "mutability": "mutable",
            "name": "assistant",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "1050:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 355,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1050:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 357,
              "nodeType": "StructuredDocumentation",
              "src": "1085:190:2",
              "text": "@notice Returns the underlying token\n         e.g. USDC address\n @dev Returns an ERC20 token that is used to deposit into Compound\n @return The underlying token used"
            },
            "functionSelector": "7158da7c",
            "id": 359,
            "mutability": "mutable",
            "name": "underlyingAsset",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "1280:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$87",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 358,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 87,
              "src": "1280:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$87",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 360,
              "nodeType": "StructuredDocumentation",
              "src": "1319:220:2",
              "text": "@notice Returns the address of the token being minted\n         e.g. cUSDC address\n @dev Returns an ERC20 token that is minted from Compound\n @return The token that a specific DeFi protocols mints"
            },
            "functionSelector": "50906f2a",
            "id": 362,
            "mutability": "mutable",
            "name": "mintingAsset",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "1544:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$87",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 361,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 87,
              "src": "1544:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$87",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1817:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1835:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1835:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 368,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "1849:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1835:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e6572",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1856:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        },
                        "value": "Caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1827:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:51:2"
                },
                {
                  "id": 373,
                  "nodeType": "PlaceholderStatement",
                  "src": "1888:1:2"
                }
              ]
            },
            "documentation": {
              "id": 363,
              "nodeType": "StructuredDocumentation",
              "src": "1602:191:2",
              "text": "@notice Checks to make sure only the contract owner (deployer) can call a specific function\n @dev The contract deployer has certain elevated permissions, which can be checked here."
            },
            "id": 375,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:2:2"
            },
            "src": "1798:98:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "2144:83:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 379,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2162:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2162:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 381,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "2176:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2162:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 383,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2185:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2185:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 385,
                            "name": "assistant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "2199:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2185:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2162:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2154:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "2154:55:2"
                },
                {
                  "id": 390,
                  "nodeType": "PlaceholderStatement",
                  "src": "2219:1:2"
                }
              ]
            },
            "documentation": {
              "id": 376,
              "nodeType": "StructuredDocumentation",
              "src": "1906:211:2",
              "text": "@notice Checks to make sure the caller is friendly and is approved by owner to perform actions\n @dev Certain permissions require either the owner or assistant to perform them. This checks those roles."
            },
            "id": 392,
            "name": "isFriendly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:2:2"
            },
            "src": "2122:105:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "2751:346:2",
              "statements": [
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 402,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "2761:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 403,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "2769:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2761:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:14:2"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 406,
                      "name": "assistant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "2785:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 407,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2797:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2797:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2785:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:22:2"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 411,
                      "name": "underlyingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "2826:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 413,
                          "name": "_underlyingAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "2850:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 412,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2844:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$87_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2844:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2826:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$87",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:41:2"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 417,
                      "name": "mintingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "2877:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 419,
                          "name": "_mintingAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "2898:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 418,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2892:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$87_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2892:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2877:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$87",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 428,
                            "name": "mintingAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "3067:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3059:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 426,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3059:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 430,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3082:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3035:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3035:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:55:2"
                }
              ]
            },
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "2237:424:2",
              "text": "@notice Constructor for a new `CompoundFacade` deployment\n @dev Deploys a new `Facade` that interfaces directly against the Compound protocol\n @param _owner The address of who should own this contract\n @param _underlyingAsset The address of the underlying asset (e.g. `USDC`)\n @param _mintingAsset The address of the token that Compound will mint, based on the underlying token (e.g. `cUSDC`)"
            },
            "id": 434,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2678:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_underlyingAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2702:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "_mintingAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2728:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2677:73:2"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2751:0:2"
            },
            "scope": 617,
            "src": "2666:431:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              636
            ],
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "3240:356:2",
              "statements": [
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "fullBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "3250:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3250:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 445,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3306:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3298:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 441,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3272:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3272:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3250:62:2"
                },
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "3372:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 449,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6d696e742875696e7432353629",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0712d680358d64f694230b7cc0b277c73686bdf768385d55cd7c547d0ffd30e",
                          "typeString": "literal_string \"mint(uint256)\""
                        },
                        "value": "mint(uint256)"
                      },
                      {
                        "id": 454,
                        "name": "fullBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3436:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a0712d680358d64f694230b7cc0b277c73686bdf768385d55cd7c547d0ffd30e",
                          "typeString": "literal_string \"mint(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 451,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3395:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "3395:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3372:76:2"
                },
                {
                  "assignments": [
                    458,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "3459:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 457,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3459:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 466,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3503:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 461,
                            "name": "mintingAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "3484:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3476:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3476:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3476:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3476:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3458:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 468,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "3529:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3521:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3571:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3563:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3563:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3563:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3578:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3578:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 471,
                      "name": "LogDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "3552:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "EmitStatement",
                  "src": "3547:42:2"
                }
              ]
            },
            "documentation": {
              "id": 435,
              "nodeType": "StructuredDocumentation",
              "src": "3107:79:2",
              "text": "This deposits funds into the underlying contract\n @inheritdoc Facade"
            },
            "functionSelector": "02248209",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToUnderlying",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 437,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3222:8:2"
            },
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:2:2"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:0:2"
            },
            "scope": 617,
            "src": "3191:405:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              640
            ],
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "3727:511:2",
              "statements": [
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "fullBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "3776:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3776:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 494,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3829:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3821:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3821:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 490,
                        "name": "mintingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3798:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3798:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3776:59:2"
                },
                {
                  "assignments": [
                    499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 499,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "3845:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 498,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3845:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 505,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "72656465656d2875696e7432353629",
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3892:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db006a751bed9eb2097bb87aa93452cb31329759b3b6c5518170a3d50e6e985d",
                          "typeString": "literal_string \"redeem(uint256)\""
                        },
                        "value": "redeem(uint256)"
                      },
                      {
                        "id": 503,
                        "name": "fullBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "3911:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_db006a751bed9eb2097bb87aa93452cb31329759b3b6c5518170a3d50e6e985d",
                          "typeString": "literal_string \"redeem(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 500,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3868:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "3868:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3845:78:2"
                },
                {
                  "assignments": [
                    507,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "3934:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 506,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3934:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 515,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "3978:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 510,
                            "name": "mintingAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "3959:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3951:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 508,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3951:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3951:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3951:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3951:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 517,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "4004:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3996:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3996:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:16:2"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "allUSDC",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "4081:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4081:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 526,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4133:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4125:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 524,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4125:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4125:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 522,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4099:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4099:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4099:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4081:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "4174:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 534,
                        "name": "allUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "4181:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 530,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4149:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4149:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4225:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4217:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 538,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4217:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4217:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 537,
                      "name": "LogWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "4205:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "EmitStatement",
                  "src": "4200:31:2"
                }
              ]
            },
            "documentation": {
              "id": 482,
              "nodeType": "StructuredDocumentation",
              "src": "3606:69:2",
              "text": "Withdraws all user funds, is protected\n @inheritdoc Facade"
            },
            "functionSelector": "3ccfd60b",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 486,
                "modifierName": {
                  "id": 485,
                  "name": "isFriendly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "3716:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3716:10:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3700:8:2"
            },
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3697:2:2"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3727:0:2"
            },
            "scope": 617,
            "src": "3680:558:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              644
            ],
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "4371:139:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 552,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "4415:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4415:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:10:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 556,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "4497:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 555,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "4484:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4484:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "4484:19:2"
                }
              ]
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "4248:70:2",
              "text": "Destroys a given `Facade`, is protected\n @inheritdoc Facade"
            },
            "functionSelector": "83197ef0",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 550,
                "modifierName": {
                  "id": 549,
                  "name": "isFriendly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "4360:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4360:10:2"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4342:8:2"
            },
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4339:2:2"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4371:0:2"
            },
            "scope": 617,
            "src": "4323:187:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              650
            ],
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "4772:62:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 571,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4821:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4813:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 569,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4813:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4813:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 567,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4787:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4787:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 574,
                  "nodeType": "Return",
                  "src": "4780:47:2"
                }
              ]
            },
            "documentation": {
              "id": 561,
              "nodeType": "StructuredDocumentation",
              "src": "4590:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "59356c5c",
            "id": 576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4732:8:2"
            },
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4729:2:2"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "4763:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4762:9:2"
            },
            "scope": 617,
            "src": "4703:131:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              656
            ],
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "5022:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 587,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5068:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5060:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5060:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5060:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 583,
                        "name": "mintingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "5037:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "5037:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5037:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 582,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "5030:44:2"
                }
              ]
            },
            "documentation": {
              "id": 577,
              "nodeType": "StructuredDocumentation",
              "src": "4844:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "ad7b68fe",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintedBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 579,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4982:8:2"
            },
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4979:2:2"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "5013:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5013:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5012:9:2"
            },
            "scope": 617,
            "src": "4957:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              662
            ],
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "5283:48:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 599,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "5300:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "5300:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5300:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "5293:31:2"
                }
              ]
            },
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "5091:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "33340e8e",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingAssetSymbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 595,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5237:8:2"
            },
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5234:2:2"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "5268:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5268:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5267:15:2"
            },
            "scope": 617,
            "src": "5204:127:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              668
            ],
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "5529:45:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 611,
                        "name": "mintingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "5546:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "5546:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 610,
                  "id": 614,
                  "nodeType": "Return",
                  "src": "5539:28:2"
                }
              ]
            },
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "5341:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "906a3dd0",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintedAssetSymbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5483:8:2"
            },
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5480:2:2"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5514:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5513:15:2"
            },
            "scope": 617,
            "src": "5454:120:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 618,
        "src": "332:5249:2"
      }
    ],
    "src": "32:5549:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol",
    "exportedSymbols": {
      "CompoundFacade": [
        617
      ]
    },
    "id": 618,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 338,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 339,
        "nodeType": "ImportDirective",
        "scope": 618,
        "sourceUnit": 88,
        "src": "57:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/FacadeInterface.sol",
        "file": "./FacadeInterface.sol",
        "id": 340,
        "nodeType": "ImportDirective",
        "scope": 618,
        "sourceUnit": 670,
        "src": "87:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 342,
              "name": "Facade",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 669,
              "src": "359:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Facade_$669",
                "typeString": "contract Facade"
              }
            },
            "id": 343,
            "nodeType": "InheritanceSpecifier",
            "src": "359:6:2"
          }
        ],
        "contractDependencies": [
          669
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 341,
          "nodeType": "StructuredDocumentation",
          "src": "120:212:2",
          "text": "@title A compound.finance facade implementation\n @author Joel Reis\n @notice Interfaces directly with compound.finance\n @dev This can be used as an example for generating other DeFi facade interfaces"
        },
        "fullyImplemented": true,
        "id": 617,
        "linearizedBaseContracts": [
          617,
          669
        ],
        "name": "CompoundFacade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 350,
            "mutability": "constant",
            "name": "MAX_INT",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "415:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "415:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 347,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 345,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "442:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 346,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "445:3:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "442:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 348,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "451:1:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "442:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 351,
              "nodeType": "StructuredDocumentation",
              "src": "463:182:2",
              "text": "@notice The owner of this contract\n @dev The owner of this contract, set from deployer and unchangable\n @return The address with the most authority on this contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 353,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "650:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 352,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "650:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 354,
              "nodeType": "StructuredDocumentation",
              "src": "689:356:2",
              "text": "@notice Returns an address that is allowed to assist in certain functions to help with automation\n         This address never has full control over funds\n         e.g. sending funds back to `owner`'s wallet.\n @dev Returns the pre-defined, unedited assistant\n @return Assistant hich is permissioned to call specific functions"
            },
            "functionSelector": "2569cd6c",
            "id": 356,
            "mutability": "mutable",
            "name": "assistant",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "1050:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 355,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1050:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 357,
              "nodeType": "StructuredDocumentation",
              "src": "1085:190:2",
              "text": "@notice Returns the underlying token\n         e.g. USDC address\n @dev Returns an ERC20 token that is used to deposit into Compound\n @return The underlying token used"
            },
            "functionSelector": "7158da7c",
            "id": 359,
            "mutability": "mutable",
            "name": "underlyingAsset",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "1280:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$87",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 358,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 87,
              "src": "1280:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$87",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 360,
              "nodeType": "StructuredDocumentation",
              "src": "1319:220:2",
              "text": "@notice Returns the address of the token being minted\n         e.g. cUSDC address\n @dev Returns an ERC20 token that is minted from Compound\n @return The token that a specific DeFi protocols mints"
            },
            "functionSelector": "50906f2a",
            "id": 362,
            "mutability": "mutable",
            "name": "mintingAsset",
            "nodeType": "VariableDeclaration",
            "scope": 617,
            "src": "1544:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$87",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 361,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 87,
              "src": "1544:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$87",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "1817:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 366,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1835:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1835:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 368,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "1849:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1835:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e6572",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1856:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        },
                        "value": "Caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1827:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:51:2"
                },
                {
                  "id": 373,
                  "nodeType": "PlaceholderStatement",
                  "src": "1888:1:2"
                }
              ]
            },
            "documentation": {
              "id": 363,
              "nodeType": "StructuredDocumentation",
              "src": "1602:191:2",
              "text": "@notice Checks to make sure only the contract owner (deployer) can call a specific function\n @dev The contract deployer has certain elevated permissions, which can be checked here."
            },
            "id": 375,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:2:2"
            },
            "src": "1798:98:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "2144:83:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 379,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2162:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2162:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 381,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "2176:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2162:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 383,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2185:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2185:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 385,
                            "name": "assistant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "2199:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2185:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2162:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2154:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "2154:55:2"
                },
                {
                  "id": 390,
                  "nodeType": "PlaceholderStatement",
                  "src": "2219:1:2"
                }
              ]
            },
            "documentation": {
              "id": 376,
              "nodeType": "StructuredDocumentation",
              "src": "1906:211:2",
              "text": "@notice Checks to make sure the caller is friendly and is approved by owner to perform actions\n @dev Certain permissions require either the owner or assistant to perform them. This checks those roles."
            },
            "id": 392,
            "name": "isFriendly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:2:2"
            },
            "src": "2122:105:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "2751:346:2",
              "statements": [
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 402,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "2761:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 403,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "2769:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2761:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:14:2"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 406,
                      "name": "assistant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "2785:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 407,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2797:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2797:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2785:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:22:2"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 411,
                      "name": "underlyingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "2826:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 413,
                          "name": "_underlyingAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 397,
                          "src": "2850:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 412,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2844:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$87_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2844:23:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2826:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$87",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "2826:41:2"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 417,
                      "name": "mintingAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "2877:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 419,
                          "name": "_mintingAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "2898:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 418,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "2892:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$87_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2892:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$87",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2877:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$87",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 428,
                            "name": "mintingAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "3067:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3059:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 426,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3059:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 430,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3082:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3035:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3035:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:55:2"
                }
              ]
            },
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "2237:424:2",
              "text": "@notice Constructor for a new `CompoundFacade` deployment\n @dev Deploys a new `Facade` that interfaces directly against the Compound protocol\n @param _owner The address of who should own this contract\n @param _underlyingAsset The address of the underlying asset (e.g. `USDC`)\n @param _mintingAsset The address of the token that Compound will mint, based on the underlying token (e.g. `cUSDC`)"
            },
            "id": 434,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2678:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_underlyingAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2702:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "_mintingAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "2728:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2677:73:2"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2751:0:2"
            },
            "scope": 617,
            "src": "2666:431:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              636
            ],
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "3240:356:2",
              "statements": [
                {
                  "assignments": [
                    440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 440,
                      "mutability": "mutable",
                      "name": "fullBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "3250:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3250:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 448,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 445,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3306:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3298:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3298:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 441,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3272:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3272:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3272:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3250:62:2"
                },
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "3372:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 449,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3372:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6d696e742875696e7432353629",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3419:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0712d680358d64f694230b7cc0b277c73686bdf768385d55cd7c547d0ffd30e",
                          "typeString": "literal_string \"mint(uint256)\""
                        },
                        "value": "mint(uint256)"
                      },
                      {
                        "id": 454,
                        "name": "fullBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3436:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a0712d680358d64f694230b7cc0b277c73686bdf768385d55cd7c547d0ffd30e",
                          "typeString": "literal_string \"mint(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 451,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3395:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "3395:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3372:76:2"
                },
                {
                  "assignments": [
                    458,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "3459:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 457,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3459:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 466,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3503:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 461,
                            "name": "mintingAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "3484:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3476:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 459,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3476:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3476:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3476:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3458:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 468,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "3529:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3521:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "3521:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3571:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3563:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 472,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3563:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3563:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3578:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3578:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 471,
                      "name": "LogDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "3552:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "EmitStatement",
                  "src": "3547:42:2"
                }
              ]
            },
            "documentation": {
              "id": 435,
              "nodeType": "StructuredDocumentation",
              "src": "3107:79:2",
              "text": "This deposits funds into the underlying contract\n @inheritdoc Facade"
            },
            "functionSelector": "02248209",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToUnderlying",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 437,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3222:8:2"
            },
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:2:2"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:0:2"
            },
            "scope": 617,
            "src": "3191:405:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              640
            ],
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "3727:511:2",
              "statements": [
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "fullBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "3776:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3776:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 494,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3829:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3821:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3821:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 490,
                        "name": "mintingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3798:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "3798:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3798:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3776:59:2"
                },
                {
                  "assignments": [
                    499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 499,
                      "mutability": "mutable",
                      "name": "payload",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "3845:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 498,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3845:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 505,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "72656465656d2875696e7432353629",
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3892:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db006a751bed9eb2097bb87aa93452cb31329759b3b6c5518170a3d50e6e985d",
                          "typeString": "literal_string \"redeem(uint256)\""
                        },
                        "value": "redeem(uint256)"
                      },
                      {
                        "id": 503,
                        "name": "fullBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "3911:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_db006a751bed9eb2097bb87aa93452cb31329759b3b6c5518170a3d50e6e985d",
                          "typeString": "literal_string \"redeem(uint256)\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 500,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3868:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "3868:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3845:78:2"
                },
                {
                  "assignments": [
                    507,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "3934:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 506,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3934:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 515,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "3978:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 510,
                            "name": "mintingAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "3959:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3951:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 508,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3951:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3951:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "3951:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3951:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 517,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "4004:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3996:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3996:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:16:2"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "allUSDC",
                      "nodeType": "VariableDeclaration",
                      "scope": 544,
                      "src": "4081:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4081:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 526,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4133:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4125:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 524,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4125:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4125:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 522,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4099:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4099:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4099:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4081:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "4174:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 534,
                        "name": "allUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "4181:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 530,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4149:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "4149:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:40:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4225:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4217:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 538,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4217:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4217:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 537,
                      "name": "LogWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "4205:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4205:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "EmitStatement",
                  "src": "4200:31:2"
                }
              ]
            },
            "documentation": {
              "id": 482,
              "nodeType": "StructuredDocumentation",
              "src": "3606:69:2",
              "text": "Withdraws all user funds, is protected\n @inheritdoc Facade"
            },
            "functionSelector": "3ccfd60b",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 486,
                "modifierName": {
                  "id": 485,
                  "name": "isFriendly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "3716:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3716:10:2"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 484,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3700:8:2"
            },
            "parameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3697:2:2"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3727:0:2"
            },
            "scope": 617,
            "src": "3680:558:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              644
            ],
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "4371:139:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 552,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "4415:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4415:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:10:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 556,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "4497:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 555,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -21,
                      "src": "4484:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4484:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "4484:19:2"
                }
              ]
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "4248:70:2",
              "text": "Destroys a given `Facade`, is protected\n @inheritdoc Facade"
            },
            "functionSelector": "83197ef0",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 550,
                "modifierName": {
                  "id": 549,
                  "name": "isFriendly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 392,
                  "src": "4360:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4360:10:2"
              }
            ],
            "name": "destroy",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4342:8:2"
            },
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4339:2:2"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4371:0:2"
            },
            "scope": 617,
            "src": "4323:187:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              650
            ],
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "4772:62:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 571,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4821:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4813:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 569,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4813:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4813:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 567,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4787:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4787:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 574,
                  "nodeType": "Return",
                  "src": "4780:47:2"
                }
              ]
            },
            "documentation": {
              "id": 561,
              "nodeType": "StructuredDocumentation",
              "src": "4590:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "59356c5c",
            "id": 576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4732:8:2"
            },
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4729:2:2"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "4763:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4762:9:2"
            },
            "scope": 617,
            "src": "4703:131:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              656
            ],
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "5022:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 587,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5068:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CompoundFacade_$617",
                              "typeString": "contract CompoundFacade"
                            }
                          ],
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5060:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5060:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5060:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 583,
                        "name": "mintingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "5037:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "5037:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5037:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 582,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "5030:44:2"
                }
              ]
            },
            "documentation": {
              "id": 577,
              "nodeType": "StructuredDocumentation",
              "src": "4844:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "ad7b68fe",
            "id": 592,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintedBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 579,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4982:8:2"
            },
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4979:2:2"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "5013:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5013:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5012:9:2"
            },
            "scope": 617,
            "src": "4957:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              662
            ],
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "5283:48:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 599,
                        "name": "underlyingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "5300:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "5300:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5300:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "5293:31:2"
                }
              ]
            },
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "5091:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "33340e8e",
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingAssetSymbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 595,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5237:8:2"
            },
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5234:2:2"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 604,
                  "src": "5268:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5268:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5267:15:2"
            },
            "scope": 617,
            "src": "5204:127:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              668
            ],
            "body": {
              "id": 615,
              "nodeType": "Block",
              "src": "5529:45:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 611,
                        "name": "mintingAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "5546:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$87",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "5546:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 610,
                  "id": 614,
                  "nodeType": "Return",
                  "src": "5539:28:2"
                }
              ]
            },
            "documentation": {
              "id": 605,
              "nodeType": "StructuredDocumentation",
              "src": "5341:108:2",
              "text": "This is available directly on the asset address, but is added for convenience\n @inheritdoc Facade"
            },
            "functionSelector": "906a3dd0",
            "id": 616,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintedAssetSymbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5483:8:2"
            },
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5480:2:2"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5514:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5513:15:2"
            },
            "scope": 617,
            "src": "5454:120:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 618,
        "src": "332:5249:2"
      }
    ],
    "src": "32:5549:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x1944debb24a9aafcf2708be964e412cdb73fc36d6ea24577fd8dcc05b93b4a44": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "facade",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0xf67611512e0a2d90c96fd3f08dca4971bc45fba9dc679eabe839a32abbe58a8e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "facade",
              "type": "address"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf58759f379581488508d1e11f2f3Ce9f8c17dB9A",
      "transactionHash": "0x5075643f34a844936b3d76e407370b2b4dd2daa91207338f0f9dd5edce70c660"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-14T20:12:55.992Z",
  "devdoc": {
    "author": "Joel Reis",
    "details": "This can be used as an example for generating other DeFi facade interfaces",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Deploys a new `Facade` that interfaces directly against the Compound protocol",
        "params": {
          "_mintingAsset": "The address of the token that Compound will mint, based on the underlying token (e.g. `cUSDC`)",
          "_owner": "The address of who should own this contract",
          "_underlyingAsset": "The address of the underlying asset (e.g. `USDC`)"
        }
      },
      "depositToUnderlying()": {
        "details": "Deposits the asset associated with the asset pair"
      },
      "destroy()": {
        "details": "This should be a protected function to prevent abuse of withdrawing      Withdrawing should always deposit funds back to the `owner`"
      },
      "mintedAssetSymbol()": {
        "details": "Should forward requests to the minting token",
        "returns": {
          "_0": "The symbol for the minted token that is available for withdrawing"
        }
      },
      "mintedBalance()": {
        "details": "Should forward requests to the minting token e.g. cUSDC, cDAI",
        "returns": {
          "_0": "The amount of the minted balance that is available for withdrawing"
        }
      },
      "underlyingAssetSymbol()": {
        "details": "Should forward requests to the underlying token",
        "returns": {
          "_0": "The symbol for the underlying token that is available for deposit"
        }
      },
      "underlyingBalance()": {
        "details": "Should forward requests to the underlying token",
        "returns": {
          "_0": "The amount of the underlying token that is available for deposit"
        }
      },
      "withdraw()": {
        "details": "This should be a protected function to prevent abuse of withdrawing      Withdrawing should always deposit funds back to the `owner`"
      }
    },
    "stateVariables": {
      "assistant": {
        "details": "Returns the pre-defined, unedited assistant",
        "return": "Assistant hich is permissioned to call specific functions"
      },
      "mintingAsset": {
        "details": "Returns an ERC20 token that is minted from Compound",
        "return": "The token that a specific DeFi protocols mints"
      },
      "owner": {
        "details": "The owner of this contract, set from deployer and unchangable",
        "return": "The address with the most authority on this contract"
      },
      "underlyingAsset": {
        "details": "Returns an ERC20 token that is used to deposit into Compound",
        "return": "The underlying token used"
      }
    },
    "title": "A compound.finance facade implementation",
    "version": 1
  },
  "userdoc": {
    "events": {
      "LogDeposit(address,address)": {
        "notice": "An event used to communicate that a \"Deposit\" was performed"
      },
      "LogWithdraw(address)": {
        "notice": "An event used to communicate a \"Withdrawal\" was performed"
      }
    },
    "kind": "user",
    "methods": {
      "assistant()": {
        "notice": "Returns an address that is allowed to assist in certain functions to help with automation         This address never has full control over funds         e.g. sending funds back to `owner`'s wallet."
      },
      "constructor": {
        "notice": "Constructor for a new `CompoundFacade` deployment"
      },
      "depositToUnderlying()": {
        "notice": "This deposits funds into the underlying contract"
      },
      "destroy()": {
        "notice": "Destroys a given `Facade`, is protected"
      },
      "mintedAssetSymbol()": {
        "notice": "This is available directly on the asset address, but is added for convenience"
      },
      "mintedBalance()": {
        "notice": "This is available directly on the asset address, but is added for convenience"
      },
      "mintingAsset()": {
        "notice": "Returns the address of the token being minted         e.g. cUSDC address"
      },
      "owner()": {
        "notice": "The owner of this contract"
      },
      "underlyingAsset()": {
        "notice": "Returns the underlying token         e.g. USDC address"
      },
      "underlyingAssetSymbol()": {
        "notice": "This is available directly on the asset address, but is added for convenience"
      },
      "underlyingBalance()": {
        "notice": "This is available directly on the asset address, but is added for convenience"
      },
      "withdraw()": {
        "notice": "Withdraws all user funds, is protected"
      }
    },
    "notice": "Interfaces directly with compound.finance",
    "version": 1
  }
}