{
  "contractName": "Migrations",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "last_completed_migration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "completed",
          "type": "uint256"
        }
      ],
      "name": "setCompleted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"last_completed_migration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"completed\",\"type\":\"uint256\"}],\"name\":\"setCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Only handles setting up the owner from the deploying address\"},\"setCompleted(uint256)\":{\"details\":\"When the `Migrations` are completed, this is set to flag it is done\",\"params\":{\"completed\":\"Value of when this `Migrations` was completed\"}}},\"stateVariables\":{\"last_completed_migration\":{\"details\":\"Defines when the last migration was completed\",\"return\":\"A value assocaited with the last completed migration\"},\"owner\":{\"details\":\"The owner of this contract, set from deployer and unchangable\",\"return\":\"The address with the most authority on this contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"A simple constructor for deploying a `Migrations`\"},\"last_completed_migration()\":{\"notice\":\"The last completed migration\"},\"owner()\":{\"notice\":\"The owner of this contract\"},\"setCompleted(uint256)\":{\"notice\":\"Defines whether a migration is completed, and if so, when it was finished\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/metroid/Development/Block/Final_Project/contracts/Migrations.sol\":\"Migrations\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/metroid/Development/Block/Final_Project/contracts/Migrations.sol\":{\"keccak256\":\"0x422045c95df40b68eff206c85ee8734f516d6dfb14f4d71653f45cfe6c467867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbd3ca43ea422f6bd3202d7693c4109e5c954df5a368db0bde2acfd0b3c395d4\",\"dweb:/ipfs/QmdzDSUPPiWzCcMWVAUUgtMGPGhN1esSTqRLEURDuKHTnb\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610185806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063445df0ac146100465780638da5cb5b14610064578063fdacd57614610098575b600080fd5b61004e6100c6565b6040518082815260200191505060405180910390f35b61006c6100cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100c4600480360360208110156100ae57600080fd5b81019080803590602001909291905050506100f0565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561014c57806001819055505b5056fea2646970667358221220d06a142f18dca66355f4e1011b1430d9c9f068e905daf7b629eab756bfe5fe7764736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063445df0ac146100465780638da5cb5b14610064578063fdacd57614610098575b600080fd5b61004e6100c6565b6040518082815260200191505060405180910390f35b61006c6100cc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100c4600480360360208110156100ae57600080fd5b81019080803590602001909291905050506100f0565b005b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561014c57806001819055505b5056fea2646970667358221220d06a142f18dca66355f4e1011b1430d9c9f068e905daf7b629eab756bfe5fe7764736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "57:1271:7:-:0;;;653:49;;;;;;;;;;685:10;677:5;;:18;;;;;;;;;;;;;;;;;;57:1271;;;;;;",
  "deployedSourceMap": "57:1271:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;270:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1217:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;470:36;;;;:::o;270:20::-;;;;;;;;;;;;:::o;1217:109::-;954:5;;;;;;;;;;940:19;;:10;:19;;;936:26;;;1310:9:::1;1283:24;:36;;;;936:26:::0;1217:109;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\ncontract Migrations {\n    /// @notice The owner of this contract\n    /// @dev The owner of this contract, set from deployer and unchangable\n    /// @return The address with the most authority on this contract\n    address public owner;\n\n    /// @notice The last completed migration\n    /// @dev Defines when the last migration was completed\n    /// @return A value assocaited with the last completed migration\n    uint public last_completed_migration;\n\n    /// @notice A simple constructor for deploying a `Migrations`\n    /// @dev Only handles setting up the owner from the deploying address\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /// @notice Checks to make sure only the contract owner (deployer) can call a specific function\n    /// @dev The contract deployer has certain elevated permissions, which can be checked here.\n    modifier restricted() {\n        if (msg.sender == owner) _;\n    }\n\n    /// @notice Defines whether a migration is completed, and if so, when it was finished\n    /// @param completed Value of when this `Migrations` was completed\n    /// @dev When the `Migrations` are completed, this is set to flag it is done\n    function setCompleted(uint completed) public restricted {\n        last_completed_migration = completed;\n    }\n}\n",
  "sourcePath": "/Users/metroid/Development/Block/Final_Project/contracts/Migrations.sol",
  "ast": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Migrations.sol",
    "exportedSymbols": {
      "Migrations": [
        1105
      ]
    },
    "id": 1106,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1065,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1105,
        "linearizedBaseContracts": [
          1105
        ],
        "name": "Migrations",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "83:182:7",
              "text": "@notice The owner of this contract\n @dev The owner of this contract, set from deployer and unchangable\n @return The address with the most authority on this contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 1068,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 1105,
            "src": "270:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1067,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1069,
              "nodeType": "StructuredDocumentation",
              "src": "297:168:7",
              "text": "@notice The last completed migration\n @dev Defines when the last migration was completed\n @return A value assocaited with the last completed migration"
            },
            "functionSelector": "445df0ac",
            "id": 1071,
            "mutability": "mutable",
            "name": "last_completed_migration",
            "nodeType": "VariableDeclaration",
            "scope": 1105,
            "src": "470:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1070,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "470:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "667:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1075,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "677:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1076,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "685:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "685:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "677:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "677:18:7"
                }
              ]
            },
            "documentation": {
              "id": 1072,
              "nodeType": "StructuredDocumentation",
              "src": "513:135:7",
              "text": "@notice A simple constructor for deploying a `Migrations`\n @dev Only handles setting up the owner from the deploying address"
            },
            "id": 1081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:7"
            },
            "returnParameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:0:7"
            },
            "scope": 1105,
            "src": "653:49:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "926:43:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1084,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "940:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "940:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1086,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "954:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "940:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1089,
                  "nodeType": "IfStatement",
                  "src": "936:26:7",
                  "trueBody": {
                    "id": 1088,
                    "nodeType": "PlaceholderStatement",
                    "src": "961:1:7"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1082,
              "nodeType": "StructuredDocumentation",
              "src": "708:191:7",
              "text": "@notice Checks to make sure only the contract owner (deployer) can call a specific function\n @dev The contract deployer has certain elevated permissions, which can be checked here."
            },
            "id": 1091,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:7"
            },
            "src": "904:65:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "1273:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1099,
                      "name": "last_completed_migration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "1283:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1100,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1094,
                      "src": "1310:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1283:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:36:7"
                }
              ]
            },
            "documentation": {
              "id": 1092,
              "nodeType": "StructuredDocumentation",
              "src": "975:237:7",
              "text": "@notice Defines whether a migration is completed, and if so, when it was finished\n @param completed Value of when this `Migrations` was completed\n @dev When the `Migrations` are completed, this is set to flag it is done"
            },
            "functionSelector": "fdacd576",
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1097,
                "modifierName": {
                  "id": 1096,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1091,
                  "src": "1262:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1262:10:7"
              }
            ],
            "name": "setCompleted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1094,
                  "mutability": "mutable",
                  "name": "completed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "1239:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:16:7"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:0:7"
            },
            "scope": 1105,
            "src": "1217:109:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1106,
        "src": "57:1271:7"
      }
    ],
    "src": "32:1297:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Migrations.sol",
    "exportedSymbols": {
      "Migrations": [
        1105
      ]
    },
    "id": 1106,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1065,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1105,
        "linearizedBaseContracts": [
          1105
        ],
        "name": "Migrations",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1066,
              "nodeType": "StructuredDocumentation",
              "src": "83:182:7",
              "text": "@notice The owner of this contract\n @dev The owner of this contract, set from deployer and unchangable\n @return The address with the most authority on this contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 1068,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 1105,
            "src": "270:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1067,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1069,
              "nodeType": "StructuredDocumentation",
              "src": "297:168:7",
              "text": "@notice The last completed migration\n @dev Defines when the last migration was completed\n @return A value assocaited with the last completed migration"
            },
            "functionSelector": "445df0ac",
            "id": 1071,
            "mutability": "mutable",
            "name": "last_completed_migration",
            "nodeType": "VariableDeclaration",
            "scope": 1105,
            "src": "470:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1070,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "470:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "667:35:7",
              "statements": [
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1075,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "677:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1076,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "685:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "685:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "677:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "677:18:7"
                }
              ]
            },
            "documentation": {
              "id": 1072,
              "nodeType": "StructuredDocumentation",
              "src": "513:135:7",
              "text": "@notice A simple constructor for deploying a `Migrations`\n @dev Only handles setting up the owner from the deploying address"
            },
            "id": 1081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:7"
            },
            "returnParameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:0:7"
            },
            "scope": 1105,
            "src": "653:49:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "926:43:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1084,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "940:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "940:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1086,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "954:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "940:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1089,
                  "nodeType": "IfStatement",
                  "src": "936:26:7",
                  "trueBody": {
                    "id": 1088,
                    "nodeType": "PlaceholderStatement",
                    "src": "961:1:7"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1082,
              "nodeType": "StructuredDocumentation",
              "src": "708:191:7",
              "text": "@notice Checks to make sure only the contract owner (deployer) can call a specific function\n @dev The contract deployer has certain elevated permissions, which can be checked here."
            },
            "id": 1091,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:7"
            },
            "src": "904:65:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "1273:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1099,
                      "name": "last_completed_migration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "1283:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1100,
                      "name": "completed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1094,
                      "src": "1310:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1283:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:36:7"
                }
              ]
            },
            "documentation": {
              "id": 1092,
              "nodeType": "StructuredDocumentation",
              "src": "975:237:7",
              "text": "@notice Defines whether a migration is completed, and if so, when it was finished\n @param completed Value of when this `Migrations` was completed\n @dev When the `Migrations` are completed, this is set to flag it is done"
            },
            "functionSelector": "fdacd576",
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1097,
                "modifierName": {
                  "id": 1096,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1091,
                  "src": "1262:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1262:10:7"
              }
            ],
            "name": "setCompleted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1094,
                  "mutability": "mutable",
                  "name": "completed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "1239:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1238:16:7"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:0:7"
            },
            "scope": 1105,
            "src": "1217:109:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1106,
        "src": "57:1271:7"
      }
    ],
    "src": "32:1297:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x5a45A0ab8dC8Ab1a73fC51684301DB1c8dD357d7",
      "transactionHash": "0x51d46bd4db57877af8303d74cd7b61566b75a6d91b79818c74316537c06d6b50"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x99E3Dbca53943B42cb4cb153D453357a9df6b6a9",
      "transactionHash": "0x54e2aefe5650bf140ea3457a9ca6963eb159b4592b579e9ff9494bc89d2c78d8"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-14T17:01:12.599Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Only handles setting up the owner from the deploying address"
      },
      "setCompleted(uint256)": {
        "details": "When the `Migrations` are completed, this is set to flag it is done",
        "params": {
          "completed": "Value of when this `Migrations` was completed"
        }
      }
    },
    "stateVariables": {
      "last_completed_migration": {
        "details": "Defines when the last migration was completed",
        "return": "A value assocaited with the last completed migration"
      },
      "owner": {
        "details": "The owner of this contract, set from deployer and unchangable",
        "return": "The address with the most authority on this contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "A simple constructor for deploying a `Migrations`"
      },
      "last_completed_migration()": {
        "notice": "The last completed migration"
      },
      "owner()": {
        "notice": "The owner of this contract"
      },
      "setCompleted(uint256)": {
        "notice": "Defines whether a migration is completed, and if so, when it was finished"
      }
    },
    "version": 1
  }
}