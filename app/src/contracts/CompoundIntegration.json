{
  "contractName": "CompoundIntegration",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "LogAddedPair",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "underlyingAssetAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mintingAssetAddress",
          "type": "address"
        }
      ],
      "name": "addAvailablePair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "availablePairs",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "mintingAsset",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "deployUserInstance",
      "outputs": [
        {
          "internalType": "contract Facade",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LogAddedPair\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlyingAssetAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mintingAssetAddress\",\"type\":\"address\"}],\"name\":\"addAvailablePair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availablePairs\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"mintingAsset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"deployUserInstance\",\"outputs\":[{\"internalType\":\"contract Facade\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Joel Reis\",\"details\":\"Provides the implementation details for deploying any number of `Facades` associated with the Compound protocol\",\"kind\":\"dev\",\"methods\":{\"addAvailablePair(address,address)\":{\"details\":\"Accepts two address, that are used to construct an asset pair and stored as an option on this `Integration`\",\"params\":{\"mintingAssetAddress\":\"The address for the minting asset to be used (e.g. `cUSDC`)\",\"underlyingAssetAddress\":\"The address for the underlying asset to be used (e.g. `USDC`)\"},\"returns\":{\"_0\":\"A new index for the associated `Pair` that was just added\"}},\"deployUserInstance(address,uint256)\":{\"details\":\"Accepts information for deploying a new `Facade` (e.g. `CompoundFacade`)\",\"params\":{\"_owner\":\"The address that will be the owner on the new deployment\",\"pairIndex\":\"The index associated with a specific asset `Pair`\"},\"returns\":{\"_0\":\"A newly deployed `Facade` instance\"}},\"description()\":{\"details\":\"Should provide a human-readable string that gives a short description what this `Integration` is (e.g. `Compound Protocol`)\",\"returns\":{\"_0\":\"A human-readable string that describes the `Integration` deployed\"}}},\"title\":\"A `CompoundIntegration` for deploying `CompoundFacades`\",\"version\":1},\"userdoc\":{\"events\":{\"LogAddedPair(uint256)\":{\"notice\":\"An event used to communicate that a new asset `Pair` was added\"}},\"kind\":\"user\",\"methods\":{\"addAvailablePair(address,address)\":{\"notice\":\"Adds a new asset `Pair`\"},\"availablePairs(uint256)\":{\"notice\":\"All available asset pairs for this `Integration`\"},\"deployUserInstance(address,uint256)\":{\"notice\":\"Deploys a Compound Facade\"},\"description()\":{\"notice\":\"Describes this Compound Integration\"},\"owner()\":{\"notice\":\"The owner of this contract\"}},\"notice\":\"Helps deploy `CompoundFacades`\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/metroid/Development/Block/Final_Project/contracts/Integrations/CompoundIntegration.sol\":\"CompoundIntegration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/metroid/Development/Block/Final_Project/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x6bf31f9696663b072577ea8d27c036c61dead4f4e708abe651a37a9eef6616e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781a75a19e604e0c02258ac6866de98a76768b12ddf29c06422871fd5c81fa56\",\"dweb:/ipfs/QmaUsTPLTVD4U6AGvm5wEjrqH5Sh6As6XQQp3PEtVzbT9e\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol\":{\"keccak256\":\"0x147a55a184fb1eb119ddb0fd1d3c704084c93251e73296100f9b4e2c59569d30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e973af4f05c57c76d3f91408eceef0afa85d342e726b275f2715def2be378e28\",\"dweb:/ipfs/QmYJk4B57Fh9tpCNUjCKt7Rzz9egTwA1b2ntgQsXDJ1A8b\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Facades/FacadeInterface.sol\":{\"keccak256\":\"0xbb8bf70cbec66a32707e20d8d3c487d85044a34bb1ebe3d6a2422817aaf75d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdb3a1cc7f3150b973d8761ef67bd882139c89ee9c2684e360c09ecd070ed1e7\",\"dweb:/ipfs/Qmaaw7tgbMMH4SY8WTBAvn7sP5kzoe5UususTus3yoqBob\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Integrations/CompoundIntegration.sol\":{\"keccak256\":\"0x83c2cab813f9fd5724426da843a14bc208a5124aa3ac02a237dde6a64bdcf05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72827032a737e6636eb4870dc560c540d72b49064d87ebd22c68a7bae8729c04\",\"dweb:/ipfs/QmTQTXeYyJxQXeiNJ9Wk4bodc786NBi5xaCPSS2tm8jLaZ\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Integrations/Integration.sol\":{\"keccak256\":\"0xd3d0060761060796e5bca0ca9de52a36d0da8107be578b093e04c4dce42507e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8c5ebcd85245f27a1cad60ef0d5868c4396f0a1c906679c657273d7e2cc0b22\",\"dweb:/ipfs/QmW56VNUs43Xhz3hRZotQ7aW9FVa4dctifzFFNTKTJM5wJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a7d806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e0af5701461005c57806342a9a7b2146100d45780635ced3166146101495780637284e416146101c15780638da5cb5b14610244575b600080fd5b6100be6004803603604081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610278565b6040518082815260200191505060405180910390f35b610100600480360360208110156100ea57600080fd5b810190808035906020019092919050505061049d565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6101956004803603604081101561015f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061050e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9610689565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102095780820151818401526020810190506101ee565b50505050905090810190601f1680156102365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024c6106c6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d757374206265206f776e65722100000000000000000000000000000000000081525060200191505060405180910390fd5b6000839050600083905061034e6106ea565b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509050600181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506000600180805490500390507fd2fd0ac8bf105666b4f2feb32d07b1b672cad02b3e1546a733a79b86f1c5084c816040518082815260200191505060405180910390a18094505050505092915050565b600181815481106104aa57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60006105186106ea565b6001838154811061052557fe5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000848260000151836020015160405161060590610730565b808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f08015801561067b573d6000803e3d6000fd5b509050809250505092915050565b60606040518060400160405280601181526020017f436f6d706f756e642050726f746f636f6c000000000000000000000000000000815250905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61130a8061073e8339019056fe608060405234801561001057600080fd5b5060405161130a38038061130a8339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561023057600080fd5b505af1158015610244573d6000803e3d6000fd5b505050506040513d602081101561025a57600080fd5b81019080805190602001909291905050505050505061108c8061027e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806359356c5c1161007157806359356c5c146101ad5780637158da7c146101cb57806383197ef0146101ff5780638da5cb5b14610209578063906a3dd01461023d578063ad7b68fe146102c0576100a9565b806302248209146100ae5780632569cd6c146100b857806333340e8e146100ec5780633ccfd60b1461016f57806350906f2a14610179575b600080fd5b6100b66102de565b005b6100c061057b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f46105a1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610177610709565b005b610181610bf7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b5610c1d565b6040518082815260200191505060405180910390f35b6101d3610ce8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610207610d0e565b005b610211610dff565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610245610e23565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028557808201518184015260208101905061026a565b50505050905090810190601f1680156102b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c8610f8b565b6040518082815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561036957600080fd5b505afa15801561037d573d6000803e3d6000fd5b505050506040513d602081101561039357600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fa0712d68000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b602083106104a75780518252602082019150602081019050602083039250610484565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b505090508061051c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167febfb0d0230732d2051fdbe3e95732ec7730ffa637c3985d7ccccd459555941a360405160405180910390a3505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561064957600080fd5b810190808051604051939291908464010000000082111561066957600080fd5b8382019150602082018581111561067f57600080fd5b825186600182028301116401000000008211171561069c57600080fd5b8083526020830192505050908051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b50604052505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107b05750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107b957600080fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561084457600080fd5b505afa158015610858573d6000803e3d6000fd5b505050506040513d602081101561086e57600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fdb006a75000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b60208310610982578051825260208201915060208101905060208303925061095f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109e4576040519150601f19603f3d011682016040523d82523d6000602084013e6109e9565b606091505b50509050806109f757600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b81019080805190602001909291905050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b8101908080519060200190929190505050503073ffffffffffffffffffffffffffffffffffffffff167faf66eb1ff59a99165e990351acac53ab2fbc78bf79381392dd75b57ed2b8c40c60405160405180910390a250505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d6020811015610cd257600080fd5b8101908080519060200190929190505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610db55750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610dbe57600080fd5b610dc6610709565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ecb57600080fd5b8101908080516040519392919084640100000000821115610eeb57600080fd5b83820191506020820185811115610f0157600080fd5b8251866001820283011164010000000082111715610f1e57600080fd5b8083526020830192505050908051906020019080838360005b83811015610f52578082015181840152602081019050610f37565b50505050905090810190601f168015610f7f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b810190808051906020019092919050505090509056fea26469706673582212204fa428026f7ecce8d95f01ab321cd7e2efa1af48e91e0d2cc491ee943a9eab3764736f6c63430007010033a2646970667358221220dcb4f60ed7f0660c64cd857684314577455b7dd6cb1e9c336b8282572fbadab764736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630e0af5701461005c57806342a9a7b2146100d45780635ced3166146101495780637284e416146101c15780638da5cb5b14610244575b600080fd5b6100be6004803603604081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610278565b6040518082815260200191505060405180910390f35b610100600480360360208110156100ea57600080fd5b810190808035906020019092919050505061049d565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6101956004803603604081101561015f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061050e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9610689565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102095780820151818401526020810190506101ee565b50505050905090810190601f1680156102365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024c6106c6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d757374206265206f776e65722100000000000000000000000000000000000081525060200191505060405180910390fd5b6000839050600083905061034e6106ea565b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509050600181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506000600180805490500390507fd2fd0ac8bf105666b4f2feb32d07b1b672cad02b3e1546a733a79b86f1c5084c816040518082815260200191505060405180910390a18094505050505092915050565b600181815481106104aa57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60006105186106ea565b6001838154811061052557fe5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000848260000151836020015160405161060590610730565b808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f08015801561067b573d6000803e3d6000fd5b509050809250505092915050565b60606040518060400160405280601181526020017f436f6d706f756e642050726f746f636f6c000000000000000000000000000000815250905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61130a8061073e8339019056fe608060405234801561001057600080fd5b5060405161130a38038061130a8339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561023057600080fd5b505af1158015610244573d6000803e3d6000fd5b505050506040513d602081101561025a57600080fd5b81019080805190602001909291905050505050505061108c8061027e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806359356c5c1161007157806359356c5c146101ad5780637158da7c146101cb57806383197ef0146101ff5780638da5cb5b14610209578063906a3dd01461023d578063ad7b68fe146102c0576100a9565b806302248209146100ae5780632569cd6c146100b857806333340e8e146100ec5780633ccfd60b1461016f57806350906f2a14610179575b600080fd5b6100b66102de565b005b6100c061057b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100f46105a1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610177610709565b005b610181610bf7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b5610c1d565b6040518082815260200191505060405180910390f35b6101d3610ce8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610207610d0e565b005b610211610dff565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610245610e23565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028557808201518184015260208101905061026a565b50505050905090810190601f1680156102b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c8610f8b565b6040518082815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561036957600080fd5b505afa15801561037d573d6000803e3d6000fd5b505050506040513d602081101561039357600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fa0712d68000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b602083106104a75780518252602082019150602081019050602083039250610484565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610509576040519150601f19603f3d011682016040523d82523d6000602084013e61050e565b606091505b505090508061051c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167febfb0d0230732d2051fdbe3e95732ec7730ffa637c3985d7ccccd459555941a360405160405180910390a3505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561064957600080fd5b810190808051604051939291908464010000000082111561066957600080fd5b8382019150602082018581111561067f57600080fd5b825186600182028301116401000000008211171561069c57600080fd5b8083526020830192505050908051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b50604052505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107b05750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107b957600080fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561084457600080fd5b505afa158015610858573d6000803e3d6000fd5b505050506040513d602081101561086e57600080fd5b81019080805190602001909291905050509050606081604051602401808281526020019150506040516020818303038152906040527fdb006a75000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b60208310610982578051825260208201915060208101905060208303925061095f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146109e4576040519150601f19603f3d011682016040523d82523d6000602084013e6109e9565b606091505b50509050806109f757600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d6020811015610aac57600080fd5b81019080805190602001909291905050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b7257600080fd5b505af1158015610b86573d6000803e3d6000fd5b505050506040513d6020811015610b9c57600080fd5b8101908080519060200190929190505050503073ffffffffffffffffffffffffffffffffffffffff167faf66eb1ff59a99165e990351acac53ab2fbc78bf79381392dd75b57ed2b8c40c60405160405180910390a250505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d6020811015610cd257600080fd5b8101908080519060200190929190505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610db55750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610dbe57600080fd5b610dc6610709565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610ecb57600080fd5b8101908080516040519392919084640100000000821115610eeb57600080fd5b83820191506020820185811115610f0157600080fd5b8251866001820283011164010000000082111715610f1e57600080fd5b8083526020830192505050908051906020019080838360005b83811015610f52578082015181840152602081019050610f37565b50505050905090810190601f168015610f7f5780820380516001836020036101000a031916815260200191505b50604052505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b810190808051906020019092919050505090509056fea26469706673582212204fa428026f7ecce8d95f01ab321cd7e2efa1af48e91e0d2cc491ee943a9eab3764736f6c63430007010033a2646970667358221220dcb4f60ed7f0660c64cd857684314577455b7dd6cb1e9c336b8282572fbadab764736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "418:848:5:-:0;;;;;;;;;;;;;1773:10:6;1765:5;;:18;;;;;;;;;;;;;;;;;;418:848:5;;;;;;",
  "deployedSourceMap": "418:848:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2230:604:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1000:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:535:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1151:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:20:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2230:604;2342:4;1286:5;;;;;;;;;;;1272:19;;:10;:19;;;1264:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2358:21:::1;2388:22;2358:53;;2421:18;2448:19;2421:47;;2478:19;;:::i;:::-;2500:35;;;;;;;;2505:15;2500:35;;;;;;2522:12;2500:35;;;;::::0;2478:57:::1;;2686:14;2706:7;2686:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2724:13;2764:1;2740:14:::0;:21:::1;;;;:25;2724:41;;2780:22;2793:8;2780:22;;;;;;;;;;;;;;;;;;2819:8;2812:15;;;;;;2230:604:::0;;;;:::o;1000:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;534:535:5:-;654:6;676:16;;:::i;:::-;695:14;710:9;695:25;;;;;;;;;;;;;;;;;;676:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:23;930:6;958:4;:20;;;1001:4;:17;;;898:131;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:157;;1046:16;1039:23;;;;534:535;;;;:::o;1151:113::-;1206:13;1231:26;;;;;;;;;;;;;;;;;;;1151:113;:::o;780:20:6:-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./Integration.sol\";\n// This import is integration specific\nimport \"../Facades/CompoundFacade.sol\";\n\n/// @title A `CompoundIntegration` for deploying `CompoundFacades`\n/// @author Joel Reis\n/// @notice Helps deploy `CompoundFacades`\n/// @dev Provides the implementation details for deploying any number of `Facades` associated with the Compound protocol\ncontract CompoundIntegration is Integration {\n    /// Deploys a Compound Facade\n    /// @inheritdoc Integration\n    function deployUserInstance(address payable _owner, uint256 pairIndex)\n        public\n        override\n        returns (Facade)\n    {\n        Pair memory pair = availablePairs[pairIndex];\n        // address USDC = 0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b;\n        // address cUSDC = 0x5B281A6DdA0B271e91ae35DE655Ad301C976edb1;\n\n        Facade userCustomFacade = new CompoundFacade(\n            _owner,\n            address(pair.underlyingAsset),\n            address(pair.mintingAsset)\n        );\n        return userCustomFacade;\n    }\n\n    /// Describes this Compound Integration\n    /// @inheritdoc Integration\n    function description() external override pure returns (string memory) {\n        return \"Compound Protocol\";\n    }\n}\n",
  "sourcePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/CompoundIntegration.sol",
  "ast": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/CompoundIntegration.sol",
    "exportedSymbols": {
      "CompoundIntegration": [
        950
      ]
    },
    "id": 951,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 897,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/Integration.sol",
        "file": "./Integration.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 951,
        "sourceUnit": 1064,
        "src": "57:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol",
        "file": "../Facades/CompoundFacade.sol",
        "id": 899,
        "nodeType": "ImportDirective",
        "scope": 951,
        "sourceUnit": 618,
        "src": "124:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 901,
              "name": "Integration",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1063,
              "src": "450:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Integration_$1063",
                "typeString": "contract Integration"
              }
            },
            "id": 902,
            "nodeType": "InheritanceSpecifier",
            "src": "450:11:5"
          }
        ],
        "contractDependencies": [
          617,
          1063
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 900,
          "nodeType": "StructuredDocumentation",
          "src": "165:253:5",
          "text": "@title A `CompoundIntegration` for deploying `CompoundFacades`\n @author Joel Reis\n @notice Helps deploy `CompoundFacades`\n @dev Provides the implementation details for deploying any number of `Facades` associated with the Compound protocol"
        },
        "fullyImplemented": true,
        "id": 950,
        "linearizedBaseContracts": [
          950,
          1063
        ],
        "name": "CompoundIntegration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1056
            ],
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "666:403:5",
              "statements": [
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "676:16:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$960_memory_ptr",
                        "typeString": "struct Integration.Pair"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "Pair",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 960,
                        "src": "676:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$960_storage_ptr",
                          "typeString": "struct Integration.Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 918,
                  "initialValue": {
                    "baseExpression": {
                      "id": 915,
                      "name": "availablePairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "695:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Pair_$960_storage_$dyn_storage",
                        "typeString": "struct Integration.Pair storage ref[] storage ref"
                      }
                    },
                    "id": 917,
                    "indexExpression": {
                      "id": 916,
                      "name": "pairIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "710:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "695:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$960_storage",
                      "typeString": "struct Integration.Pair storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "676:44:5"
                },
                {
                  "assignments": [
                    920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 920,
                      "mutability": "mutable",
                      "name": "userCustomFacade",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "872:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      },
                      "typeName": {
                        "id": 919,
                        "name": "Facade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 669,
                        "src": "872:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 935,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 923,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "930:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 926,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "958:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pair_$960_memory_ptr",
                                "typeString": "struct Integration.Pair memory"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "underlyingAsset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 957,
                            "src": "958:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "950:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "950:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "950:29:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 931,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "1001:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pair_$960_memory_ptr",
                                "typeString": "struct Integration.Pair memory"
                              }
                            },
                            "id": 932,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintingAsset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 959,
                            "src": "1001:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "993:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "993:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "993:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "898:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_address_$_t_address_$returns$_t_contract$_CompoundFacade_$617_$",
                        "typeString": "function (address payable,address,address) returns (contract CompoundFacade)"
                      },
                      "typeName": {
                        "id": 921,
                        "name": "CompoundFacade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 617,
                        "src": "902:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CompoundFacade_$617",
                          "typeString": "contract CompoundFacade"
                        }
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:131:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CompoundFacade_$617",
                      "typeString": "contract CompoundFacade"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:157:5"
                },
                {
                  "expression": {
                    "id": 936,
                    "name": "userCustomFacade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 920,
                    "src": "1046:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "functionReturnParameters": 912,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "1039:23:5"
                }
              ]
            },
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "468:61:5",
              "text": "Deploys a Compound Facade\n @inheritdoc Integration"
            },
            "functionSelector": "5ced3166",
            "id": 939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployUserInstance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "628:8:5"
            },
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "562:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "pairIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "586:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:43:5"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "654:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Facade_$669",
                    "typeString": "contract Facade"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "Facade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 669,
                    "src": "654:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:8:5"
            },
            "scope": 950,
            "src": "534:535:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1062
            ],
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "1221:43:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "436f6d706f756e642050726f746f636f6c",
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1238:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a68c4805959ea8cd4cdf612bd9f50f17d4699bb6502912a97ffdf1c5b778080f",
                      "typeString": "literal_string \"Compound Protocol\""
                    },
                    "value": "Compound Protocol"
                  },
                  "functionReturnParameters": 945,
                  "id": 947,
                  "nodeType": "Return",
                  "src": "1231:26:5"
                }
              ]
            },
            "documentation": {
              "id": 940,
              "nodeType": "StructuredDocumentation",
              "src": "1075:71:5",
              "text": "Describes this Compound Integration\n @inheritdoc Integration"
            },
            "functionSelector": "7284e416",
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "description",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 942,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1183:8:5"
            },
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:5"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1206:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:15:5"
            },
            "scope": 950,
            "src": "1151:113:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 951,
        "src": "418:848:5"
      }
    ],
    "src": "32:1235:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/CompoundIntegration.sol",
    "exportedSymbols": {
      "CompoundIntegration": [
        950
      ]
    },
    "id": 951,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 897,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/Integration.sol",
        "file": "./Integration.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 951,
        "sourceUnit": 1064,
        "src": "57:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Facades/CompoundFacade.sol",
        "file": "../Facades/CompoundFacade.sol",
        "id": 899,
        "nodeType": "ImportDirective",
        "scope": 951,
        "sourceUnit": 618,
        "src": "124:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 901,
              "name": "Integration",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1063,
              "src": "450:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Integration_$1063",
                "typeString": "contract Integration"
              }
            },
            "id": 902,
            "nodeType": "InheritanceSpecifier",
            "src": "450:11:5"
          }
        ],
        "contractDependencies": [
          617,
          1063
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 900,
          "nodeType": "StructuredDocumentation",
          "src": "165:253:5",
          "text": "@title A `CompoundIntegration` for deploying `CompoundFacades`\n @author Joel Reis\n @notice Helps deploy `CompoundFacades`\n @dev Provides the implementation details for deploying any number of `Facades` associated with the Compound protocol"
        },
        "fullyImplemented": true,
        "id": 950,
        "linearizedBaseContracts": [
          950,
          1063
        ],
        "name": "CompoundIntegration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1056
            ],
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "666:403:5",
              "statements": [
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "676:16:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$960_memory_ptr",
                        "typeString": "struct Integration.Pair"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "Pair",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 960,
                        "src": "676:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$960_storage_ptr",
                          "typeString": "struct Integration.Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 918,
                  "initialValue": {
                    "baseExpression": {
                      "id": 915,
                      "name": "availablePairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "695:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Pair_$960_storage_$dyn_storage",
                        "typeString": "struct Integration.Pair storage ref[] storage ref"
                      }
                    },
                    "id": 917,
                    "indexExpression": {
                      "id": 916,
                      "name": "pairIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "710:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "695:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$960_storage",
                      "typeString": "struct Integration.Pair storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "676:44:5"
                },
                {
                  "assignments": [
                    920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 920,
                      "mutability": "mutable",
                      "name": "userCustomFacade",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "872:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      },
                      "typeName": {
                        "id": 919,
                        "name": "Facade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 669,
                        "src": "872:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 935,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 923,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "930:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 926,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "958:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pair_$960_memory_ptr",
                                "typeString": "struct Integration.Pair memory"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "underlyingAsset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 957,
                            "src": "958:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "950:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "950:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "950:29:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 931,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "1001:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pair_$960_memory_ptr",
                                "typeString": "struct Integration.Pair memory"
                              }
                            },
                            "id": 932,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintingAsset",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 959,
                            "src": "1001:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$87",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "993:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "993:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "993:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "898:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_address_$_t_address_$returns$_t_contract$_CompoundFacade_$617_$",
                        "typeString": "function (address payable,address,address) returns (contract CompoundFacade)"
                      },
                      "typeName": {
                        "id": 921,
                        "name": "CompoundFacade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 617,
                        "src": "902:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CompoundFacade_$617",
                          "typeString": "contract CompoundFacade"
                        }
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:131:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CompoundFacade_$617",
                      "typeString": "contract CompoundFacade"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:157:5"
                },
                {
                  "expression": {
                    "id": 936,
                    "name": "userCustomFacade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 920,
                    "src": "1046:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "functionReturnParameters": 912,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "1039:23:5"
                }
              ]
            },
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "468:61:5",
              "text": "Deploys a Compound Facade\n @inheritdoc Integration"
            },
            "functionSelector": "5ced3166",
            "id": 939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployUserInstance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "628:8:5"
            },
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "562:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "pairIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "586:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:43:5"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "654:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Facade_$669",
                    "typeString": "contract Facade"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "Facade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 669,
                    "src": "654:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:8:5"
            },
            "scope": 950,
            "src": "534:535:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1062
            ],
            "body": {
              "id": 948,
              "nodeType": "Block",
              "src": "1221:43:5",
              "statements": [
                {
                  "expression": {
                    "hexValue": "436f6d706f756e642050726f746f636f6c",
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1238:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a68c4805959ea8cd4cdf612bd9f50f17d4699bb6502912a97ffdf1c5b778080f",
                      "typeString": "literal_string \"Compound Protocol\""
                    },
                    "value": "Compound Protocol"
                  },
                  "functionReturnParameters": 945,
                  "id": 947,
                  "nodeType": "Return",
                  "src": "1231:26:5"
                }
              ]
            },
            "documentation": {
              "id": 940,
              "nodeType": "StructuredDocumentation",
              "src": "1075:71:5",
              "text": "Describes this Compound Integration\n @inheritdoc Integration"
            },
            "functionSelector": "7284e416",
            "id": 949,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "description",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 942,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1183:8:5"
            },
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:2:5"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "1206:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:15:5"
            },
            "scope": 950,
            "src": "1151:113:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 951,
        "src": "418:848:5"
      }
    ],
    "src": "32:1235:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xd2fd0ac8bf105666b4f2feb32d07b1b672cad02b3e1546a733a79b86f1c5084c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "LogAddedPair",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0dbB14c5Fe6A0F92245f74B47bA4EB306C779141",
      "transactionHash": "0x324dadb2fe84afd5d05a3647afba6393953895803736e662d05d6a88b6d2004d"
    },
    "5777": {
      "events": {
        "0xd2fd0ac8bf105666b4f2feb32d07b1b672cad02b3e1546a733a79b86f1c5084c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "LogAddedPair",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4377Ed3fF4F0E23BC6e00344678D5604a4b19b34",
      "transactionHash": "0x2ed192f179113d57833acdb60e7fde93efae3dd9ffadf43d92ad29d98e700e49"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-14T20:14:58.439Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Joel Reis",
    "details": "Provides the implementation details for deploying any number of `Facades` associated with the Compound protocol",
    "kind": "dev",
    "methods": {
      "addAvailablePair(address,address)": {
        "details": "Accepts two address, that are used to construct an asset pair and stored as an option on this `Integration`",
        "params": {
          "mintingAssetAddress": "The address for the minting asset to be used (e.g. `cUSDC`)",
          "underlyingAssetAddress": "The address for the underlying asset to be used (e.g. `USDC`)"
        },
        "returns": {
          "_0": "A new index for the associated `Pair` that was just added"
        }
      },
      "deployUserInstance(address,uint256)": {
        "details": "Accepts information for deploying a new `Facade` (e.g. `CompoundFacade`)",
        "params": {
          "_owner": "The address that will be the owner on the new deployment",
          "pairIndex": "The index associated with a specific asset `Pair`"
        },
        "returns": {
          "_0": "A newly deployed `Facade` instance"
        }
      },
      "description()": {
        "details": "Should provide a human-readable string that gives a short description what this `Integration` is (e.g. `Compound Protocol`)",
        "returns": {
          "_0": "A human-readable string that describes the `Integration` deployed"
        }
      }
    },
    "title": "A `CompoundIntegration` for deploying `CompoundFacades`",
    "version": 1
  },
  "userdoc": {
    "events": {
      "LogAddedPair(uint256)": {
        "notice": "An event used to communicate that a new asset `Pair` was added"
      }
    },
    "kind": "user",
    "methods": {
      "addAvailablePair(address,address)": {
        "notice": "Adds a new asset `Pair`"
      },
      "availablePairs(uint256)": {
        "notice": "All available asset pairs for this `Integration`"
      },
      "deployUserInstance(address,uint256)": {
        "notice": "Deploys a Compound Facade"
      },
      "description()": {
        "notice": "Describes this Compound Integration"
      },
      "owner()": {
        "notice": "The owner of this contract"
      }
    },
    "notice": "Helps deploy `CompoundFacades`",
    "version": 1
  }
}