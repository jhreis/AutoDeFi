{
  "contractName": "Generator",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integrationIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "LogFacadeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "destroyer",
          "type": "address"
        }
      ],
      "name": "LogFacadeDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "integrationAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integrationIndex",
          "type": "uint256"
        }
      ],
      "name": "LogNewProtocolAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "availableProtocols",
      "outputs": [
        {
          "internalType": "contract Integration",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "facadeEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "facadeOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "facades",
      "outputs": [
        {
          "internalType": "contract Facade",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newIntegration",
          "type": "address"
        }
      ],
      "name": "addNewProtocol",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "integrationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pairIndex",
          "type": "uint256"
        }
      ],
      "name": "generateNewFacade",
      "outputs": [
        {
          "internalType": "contract Facade",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destroyFacade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "facadeIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"integrationIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"LogFacadeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destroyer\",\"type\":\"address\"}],\"name\":\"LogFacadeDestroyed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"integrationAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"integrationIndex\",\"type\":\"uint256\"}],\"name\":\"LogNewProtocolAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newIntegration\",\"type\":\"address\"}],\"name\":\"addNewProtocol\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableProtocols\",\"outputs\":[{\"internalType\":\"contract Integration\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroyFacade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"facadeEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"facadeOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"facades\",\"outputs\":[{\"internalType\":\"contract Facade\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"integrationIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairIndex\",\"type\":\"uint256\"}],\"name\":\"generateNewFacade\",\"outputs\":[{\"internalType\":\"contract Facade\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"facadeIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Joel Reis\",\"details\":\"This is a simple interface that abstracts most of the complexities of the underlying `Integrations` that handle actual deploymnets.\",\"events\":{\"LogFacadeCreated(address,uint256,uint256)\":{\"details\":\"States an address has now deployed a few `Facade` and provide enough info to perform lookups\",\"params\":{\"creator\":\"The address that created a `Facade`\",\"integrationIndex\":\"The index of the `Integration` used in the deployment\",\"pairIndex\":\"The index of the asset pair used for the deployment\"}},\"LogFacadeDestroyed(address)\":{\"details\":\"Will fire an event when a `Facade` has been destroyed\",\"params\":{\"destroyer\":\"The address that destroyed the `Facade`\"}},\"LogNewProtocolAdded(address,uint256)\":{\"details\":\"Logs when a new `Integration` is available for use\",\"params\":{\"integrationAddress\":\"The address of the new `Integration`\",\"integrationIndex\":\"The index of the new `Integration`\"}}},\"kind\":\"dev\",\"methods\":{\"addNewProtocol(address)\":{\"details\":\"An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\",\"params\":{\"newIntegration\":\"The address of a deployed `Integration`\"},\"returns\":{\"_0\":\"The index associated with the new `Integration` address\"}},\"constructor\":{\"details\":\"Only handles setting up the owner from the deploying address\"},\"destroyFacade()\":{\"details\":\"This is a public, unprotected function. However, the `Facade` implementation protects against unprotected deletion and will block any unauthorized deletions.\"},\"generateNewFacade(uint256,uint256)\":{\"details\":\"An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\",\"params\":{\"integrationIndex\":\"The index of a specific `Integration` to be deployed\",\"pairIndex\":\"The index of the asset pair, on a given `Integration`, that should be used for the deployed `Facade`\"},\"returns\":{\"_0\":\"The newly deployed `Facade` instance\"}},\"numberOfOwners()\":{\"details\":\"Provides the number of owners, which can be used to then query for all deployed `Facades`\",\"returns\":{\"_0\":\"The number of facade owners that exist\"}},\"setEnabled(uint256,bool)\":{\"details\":\"This only impacts the `Generators` control over deployments. \",\"params\":{\"enabled\":\"Whether or not the given facade should be deployable or not\",\"facadeIndex\":\"The index of a specific facade that should have their deployment flag modified\"}}},\"stateVariables\":{\"availableProtocols\":{\"details\":\"Provide the index desired, and this returns a specific `Integration`\",\"return\":\"A specific `Integration`, given a provided index\"},\"facadeEnabled\":{\"details\":\"This is a circuit-breaker, and is used to track which `Integrations` are currently enabled / disabled\",\"return\":\"whehter an `Integration` is enabled. The indeces match  exactly with `availableProtocols`\"},\"facadeOwners\":{\"details\":\"This is an array that contains all addresses that have ever deployed a facade, even if the facade has been destroyed\",\"return\":\"An address that has deployed a facade\"},\"facades\":{\"details\":\"This can be used to lookup any associated facade for an address. Currently mapping is 1:1\",\"return\":\"A specific facacde for a given address\"},\"owner\":{\"details\":\"The owner of this contract, set from deployer and unchangable\",\"return\":\"The address with the most authority on this contract\"}},\"title\":\"An interface that helps generate Facades on top of DeFi protocols\",\"version\":1},\"userdoc\":{\"events\":{\"LogFacadeCreated(address,uint256,uint256)\":{\"notice\":\"An event used to communicate that a new `Facade` has been deployed\"},\"LogFacadeDestroyed(address)\":{\"notice\":\"An event used to communicate that a `Facade` has been destroyed from this `Generator` interface\"},\"LogNewProtocolAdded(address,uint256)\":{\"notice\":\"An event used to communicate that a new protocol `Integration` has been added to the `Generator`\"}},\"kind\":\"user\",\"methods\":{\"addNewProtocol(address)\":{\"notice\":\"The `owner` can add a new protocol to be used by the `Generator`\"},\"availableProtocols(uint256)\":{\"notice\":\"The available protocols that are available to create facades from\"},\"constructor\":{\"notice\":\"A simple constructor for deploying a `Generator`\"},\"destroyFacade()\":{\"notice\":\"A function that attempts to destroy a `Facade`.\"},\"facadeEnabled(uint256)\":{\"notice\":\"Determines whether a specific facade can be created or not\"},\"facadeOwners(uint256)\":{\"notice\":\"All user addresses that have facades\"},\"facades(address)\":{\"notice\":\"TODO Improvement: Eventually make this an arrayProvides a Facade, given a wallet address\"},\"generateNewFacade(uint256,uint256)\":{\"notice\":\"The `owner` can add a new protocol to be used by the `Generator`\"},\"numberOfOwners()\":{\"notice\":\"The number of owners that have created `Facades`\"},\"owner()\":{\"notice\":\"The owner of this contract\"},\"setEnabled(uint256,bool)\":{\"notice\":\"Enables / Disables a specific facade deployment.\"}},\"notice\":\"Use this contract to create accounts that work directly with common DeFi protocols, like Compound\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/metroid/Development/Block/Final_Project/contracts/Generator.sol\":\"Generator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/metroid/Development/Block/Final_Project/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x6bf31f9696663b072577ea8d27c036c61dead4f4e708abe651a37a9eef6616e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781a75a19e604e0c02258ac6866de98a76768b12ddf29c06422871fd5c81fa56\",\"dweb:/ipfs/QmaUsTPLTVD4U6AGvm5wEjrqH5Sh6As6XQQp3PEtVzbT9e\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Facades/FacadeInterface.sol\":{\"keccak256\":\"0xbb8bf70cbec66a32707e20d8d3c487d85044a34bb1ebe3d6a2422817aaf75d7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdb3a1cc7f3150b973d8761ef67bd882139c89ee9c2684e360c09ecd070ed1e7\",\"dweb:/ipfs/Qmaaw7tgbMMH4SY8WTBAvn7sP5kzoe5UususTus3yoqBob\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Generator.sol\":{\"keccak256\":\"0xcd4727ae2c117cd0f0ceadf38d7a455f18ae75b816453b7aecd1209c403a6035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c351bbe7b0fe68e3325322ed70b325c7668cd8b44ffc2b5638392483b46ab97\",\"dweb:/ipfs/QmRhKTyxgEV2EYKCekDJUikTEDwwCMhMMuQtVqnjGm5tqQ\"]},\"/Users/metroid/Development/Block/Final_Project/contracts/Integrations/Integration.sol\":{\"keccak256\":\"0xd3d0060761060796e5bca0ca9de52a36d0da8107be578b093e04c4dce42507e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8c5ebcd85245f27a1cad60ef0d5868c4396f0a1c906679c657273d7e2cc0b22\",\"dweb:/ipfs/QmW56VNUs43Xhz3hRZotQ7aW9FVa4dctifzFFNTKTJM5wJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cb5806100606000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b0e1bd3011610066578063b0e1bd3014610207578063b2d4a57414610211578063e5c13dd114610255578063ed73ab9c1461028f578063f6fef21e146102fd5761009e565b806332194042146100a35780634015510f146100fb5780634da7eed1146101535780638da5cb5b146101b557806393fd1844146101e9575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610355565b6040518082815260200191505060405180910390f35b6101276004803603602081101561011157600080fd5b8101908080359060200190929190505050610531565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101896004803603604081101561016957600080fd5b81019080803590602001909291908035906020019092919050505061056d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bd6108fd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f1610921565b6040518082815260200191505060405180910390f35b61020f61092e565b005b61023d6004803603602081101561022757600080fd5b8101908080359060200190929190505050610a94565b60405180821515815260200191505060405180910390f35b61028d6004803603604081101561026b57600080fd5b8101908080359060200190929190803515159060200190929190505050610ac5565b005b6102d1600480360360208110156102a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103296004803603602081101561031357600080fd5b8101908080359060200190929190505050610bf4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d757374206265206f776e65722100000000000000000000000000000000000081525060200191505060405180910390fd5b60008290506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600190806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055506000600180805490500390507f54440a43c9b4c7e5c5755bdf2d640c903a6949e2dad6fb7770b5599ea4f6d1278482604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18092505050919050565b6003818154811061053e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006004838154811061057c57fe5b90600052602060002090602091828204019190069054906101000a900460ff166105f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610c596027913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106d5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610c316028913960400191505060405180910390fd5b6000600184815481106106e457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ced316633856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b505050506040513d60208110156107a957600080fd5b8101908080519060200190929190505050905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f693a944cb01572a0441324e4d5bea42803a4c51786b9e31ccd2719c6ba35fb3f8585604051808381526020018281526020019250505060405180910390a28091505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b50505050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553373ffffffffffffffffffffffffffffffffffffffff167fe7f1400f46d4a6013c1f7719189567e1679a57db059c342976ec5ea9f381ac5d60405160405180910390a2565b60048181548110610aa157fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d757374206265206f776e65722100000000000000000000000000000000000081525060200191505060405180910390fd5b8060048381548110610b9457fe5b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110610c0157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe46616361646520616c7265616479206372656174656420666f72207468697320616464726573732e5468697320696e746567726174696f6e2069732063757272656e746c792064697361626c65642ea26469706673582212202e5ed1572ab8e6c80c8a405a2b32745d5cce499a2638161b0cc5892f6de4ae9764736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b0e1bd3011610066578063b0e1bd3014610207578063b2d4a57414610211578063e5c13dd114610255578063ed73ab9c1461028f578063f6fef21e146102fd5761009e565b806332194042146100a35780634015510f146100fb5780634da7eed1146101535780638da5cb5b146101b557806393fd1844146101e9575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610355565b6040518082815260200191505060405180910390f35b6101276004803603602081101561011157600080fd5b8101908080359060200190929190505050610531565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101896004803603604081101561016957600080fd5b81019080803590602001909291908035906020019092919050505061056d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101bd6108fd565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f1610921565b6040518082815260200191505060405180910390f35b61020f61092e565b005b61023d6004803603602081101561022757600080fd5b8101908080359060200190929190505050610a94565b60405180821515815260200191505060405180910390f35b61028d6004803603604081101561026b57600080fd5b8101908080359060200190929190803515159060200190929190505050610ac5565b005b6102d1600480360360208110156102a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103296004803603602081101561031357600080fd5b8101908080359060200190929190505050610bf4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d757374206265206f776e65722100000000000000000000000000000000000081525060200191505060405180910390fd5b60008290506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600190806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055506000600180805490500390507f54440a43c9b4c7e5c5755bdf2d640c903a6949e2dad6fb7770b5599ea4f6d1278482604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18092505050919050565b6003818154811061053e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006004838154811061057c57fe5b90600052602060002090602091828204019190069054906101000a900460ff166105f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610c596027913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106d5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610c316028913960400191505060405180910390fd5b6000600184815481106106e457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ced316633856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b505050506040513d60208110156107a957600080fd5b8101908080519060200190929190505050905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f693a944cb01572a0441324e4d5bea42803a4c51786b9e31ccd2719c6ba35fb3f8585604051808381526020018281526020019250505060405180910390a28091505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383197ef06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109d557600080fd5b505af11580156109e9573d6000803e3d6000fd5b50505050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553373ffffffffffffffffffffffffffffffffffffffff167fe7f1400f46d4a6013c1f7719189567e1679a57db059c342976ec5ea9f381ac5d60405160405180910390a2565b60048181548110610aa157fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4d757374206265206f776e65722100000000000000000000000000000000000081525060200191505060405180910390fd5b8060048381548110610b9457fe5b90600052602060002090602091828204019190066101000a81548160ff0219169083151502179055505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018181548110610c0157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe46616361646520616c7265616479206372656174656420666f72207468697320616464726573732e5468697320696e746567726174696f6e2069732063757272656e746c792064697361626c65642ea26469706673582212202e5ed1572ab8e6c80c8a405a2b32745d5cce499a2638161b0cc5892f6de4ae9764736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "449:6867:4:-:0;;;3553:49;;;;;;;;;;3585:10;3577:5;;:18;;;;;;;;;;;;;;;;;;449:6867;;;;;;",
  "deployedSourceMap": "449:6867:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4024:463;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5031:569;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;666:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7219:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5841:684;;;:::i;:::-;;1873:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6864:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1248:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;926:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4024:463;4097:4;2158:5;;;;;;;;;;;2144:19;;:10;:19;;;2136:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4113:23:::1;4151:14;4113:53;;4279:18;4303:11;4279:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4325:13;4344:4;4325:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:10;4400:1;4372:18:::0;:25:::1;;;;:29;4359:42;;4416;4436:14;4452:5;4416:42;;;;;;;;;;;;;;;;;;;;;;;;;;4475:5;4468:12;;;;4024:463:::0;;;:::o;1537:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5031:569::-;5112:6;5138:13;5152:16;5138:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5130:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5261:1;5231:32;;:7;:19;5239:10;5231:19;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;5223:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:16;5337:18;5356:16;5337:36;;;;;;;;;;;;;;;;;;;;;;;;;:55;;;5393:10;5405:9;5337:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:97;;5447:9;5425:7;:19;5433:10;5425:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5466:12;5484:10;5466:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5527:10;5510:57;;;5539:16;5557:9;5510:57;;;;;;;;;;;;;;;;;;;;;;;;5584:9;5577:16;;;5031:569;;;;:::o;666:20::-;;;;;;;;;;;;:::o;7219:95::-;7265:4;7288:12;:19;;;;7281:26;;7219:95;:::o;5841:684::-;5926:7;:19;5934:10;5926:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5997:7;:19;6005:10;5997:19;;;;;;;;;;;;;;;;5990:26;;;;;;;;;;;6045:10;6026:30;;;;;;;;;;;;5841:684::o;1873:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6864:122::-;2158:5;;;;;;;;;;2144:19;;:10;:19;;;2136:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6972:7:::1;6943:13;6957:11;6943:26;;;;;;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6864:122:::0;;:::o;1248:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;926:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport './Integrations/Integration.sol';\n\n/// @title An interface that helps generate Facades on top of DeFi protocols\n/// @author Joel Reis\n/// @notice Use this contract to create accounts that work directly with common DeFi protocols, like Compound\n/// @dev This is a simple interface that abstracts most of the complexities of the underlying `Integrations` that handle actual deploymnets.\ncontract Generator {\n    \n    /// @notice The owner of this contract\n    /// @dev The owner of this contract, set from deployer and unchangable\n    /// @return The address with the most authority on this contract\n    address public owner;\n    \n    /// @notice The available protocols that are available to create facades from\n    /// @dev Provide the index desired, and this returns a specific `Integration`\n    /// @return A specific `Integration`, given a provided index\n    Integration[] public availableProtocols;\n    \n    /// TODO Improvement: Eventually make this an array\n    /// @notice Provides a Facade, given a wallet address\n    /// @dev This can be used to lookup any associated facade for an address. Currently mapping is 1:1\n    /// @return A specific facacde for a given address\n    mapping(address => Facade) public facades;\n    \n    /// @notice All user addresses that have facades\n    /// @dev This is an array that contains all addresses that have ever deployed a facade, even if the facade has been destroyed\n    /// @return An address that has deployed a facade\n    address[] public facadeOwners;\n    \n    /// @notice Determines whether a specific facade can be created or not\n    /// @dev This is a circuit-breaker, and is used to track which `Integrations` are currently enabled / disabled\n    /// @return whehter an `Integration` is enabled. The indeces match  exactly with `availableProtocols`\n    bool[] public facadeEnabled;\n    \n    /// @notice Checks to make sure only the contract owner (deployer) can call a specific function\n    /// @dev The contract deployer has certain elevated permissions, which can be checked here.\n    modifier isOwner() {\n        require(msg.sender == owner, \"Must be owner!\");\n        _;\n    }\n\n    /// @notice An event used to communicate that a new protocol `Integration` has been added to the `Generator`\n    /// @dev Logs when a new `Integration` is available for use\n    /// @param integrationAddress The address of the new `Integration`\n    /// @param integrationIndex The index of the new `Integration`\n    event LogNewProtocolAdded(address integrationAddress, uint integrationIndex);\n\n    /// @notice An event used to communicate that a new `Facade` has been deployed\n    /// @dev States an address has now deployed a few `Facade` and provide enough info to perform lookups\n    /// @param creator The address that created a `Facade`\n    /// @param integrationIndex The index of the `Integration` used in the deployment\n    /// @param pairIndex The index of the asset pair used for the deployment\n    event LogFacadeCreated(address indexed creator, uint integrationIndex, uint pairIndex);\n\n    /// @notice An event used to communicate that a `Facade` has been destroyed from this `Generator` interface\n    /// @dev Will fire an event when a `Facade` has been destroyed\n    /// @param destroyer The address that destroyed the `Facade`\n    event LogFacadeDestroyed(address indexed destroyer);\n    \n    /// @notice A simple constructor for deploying a `Generator`\n    /// @dev Only handles setting up the owner from the deploying address\n    constructor() {\n        owner = msg.sender;\n    }\n    \n    /// @notice The `owner` can add a new protocol to be used by the `Generator`\n    /// @dev An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\n    /// @param newIntegration The address of a deployed `Integration`\n    /// @return The index associated with the new `Integration` address\n    function addNewProtocol(address newIntegration) public isOwner() returns(uint) {\n        Integration integration = Integration(newIntegration);\n        // No real need to prevent duplicate protocols, as this is owner controlled, and no negatives.\n        availableProtocols.push(integration);\n        facadeEnabled.push(true);\n        uint index = availableProtocols.length - 1;\n        emit LogNewProtocolAdded(newIntegration, index);\n        return index;\n    }\n    \n    /// @notice The `owner` can add a new protocol to be used by the `Generator`\n    /// @dev An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\n    /// @param integrationIndex The index of a specific `Integration` to be deployed\n    /// @param pairIndex The index of the asset pair, on a given `Integration`, that should be used for the deployed `Facade`\n    /// @return The newly deployed `Facade` instance\n    function generateNewFacade(uint integrationIndex, uint pairIndex) public returns(Facade) {\n        require(facadeEnabled[integrationIndex], \"This integration is currently disabled.\");\n        require(facades[msg.sender] == Facade(0), \"Facade already created for this address.\");\n        Facade newFacade = availableProtocols[integrationIndex].deployUserInstance(msg.sender, pairIndex);\n        facades[msg.sender] = newFacade;\n        facadeOwners.push(msg.sender);\n        emit LogFacadeCreated(msg.sender, integrationIndex, pairIndex);\n        return newFacade;\n    }\n\n    /// @notice A function that attempts to destroy a `Facade`.\n    /// @dev This is a public, unprotected function. However, the `Facade` implementation protects against unprotected deletion and will block any unauthorized deletions.\n    function destroyFacade() public {\n        // Can only delete your own facade\n        facades[msg.sender].destroy();\n        // Burning owner\n        delete facades[msg.sender];\n        LogFacadeDestroyed(msg.sender);\n\n        // TODO: Currently leaving the owners array intact to preserve data.\n        //  So if fetching owners in a consuming way, will want to sort out owners with no facades\n        //  A future improvement here would be to create a struct for facades that also includes an array index.\n        //   and then cleanup the array and move items around to clean up empty slots. However, this is certainly \n        //   not needed for a fully functioning solution\n    }\n    \n    /// @notice Enables / Disables a specific facade deployment.\n    /// @dev This only impacts the `Generators` control over deployments. \n    /// @param facadeIndex The index of a specific facade that should have their deployment flag modified\n    /// @param enabled Whether or not the given facade should be deployable or not\n    function setEnabled(uint facadeIndex, bool enabled) public isOwner() {\n        facadeEnabled[facadeIndex] = enabled;\n    }\n    \n    /// @notice The number of owners that have created `Facades`\n    /// @dev Provides the number of owners, which can be used to then query for all deployed `Facades`\n    /// @return The number of facade owners that exist\n    function numberOfOwners() public view returns(uint) {\n        return facadeOwners.length;\n    }\n}\n",
  "sourcePath": "/Users/metroid/Development/Block/Final_Project/contracts/Generator.sol",
  "ast": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Generator.sol",
    "exportedSymbols": {
      "Generator": [
        895
      ]
    },
    "id": 896,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 671,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/Integration.sol",
        "file": "./Integrations/Integration.sol",
        "id": 672,
        "nodeType": "ImportDirective",
        "scope": 896,
        "sourceUnit": 1064,
        "src": "57:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 673,
          "nodeType": "StructuredDocumentation",
          "src": "99:350:4",
          "text": "@title An interface that helps generate Facades on top of DeFi protocols\n @author Joel Reis\n @notice Use this contract to create accounts that work directly with common DeFi protocols, like Compound\n @dev This is a simple interface that abstracts most of the complexities of the underlying `Integrations` that handle actual deploymnets."
        },
        "fullyImplemented": true,
        "id": 895,
        "linearizedBaseContracts": [
          895
        ],
        "name": "Generator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 674,
              "nodeType": "StructuredDocumentation",
              "src": "479:182:4",
              "text": "@notice The owner of this contract\n @dev The owner of this contract, set from deployer and unchangable\n @return The address with the most authority on this contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 676,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "666:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 677,
              "nodeType": "StructuredDocumentation",
              "src": "697:224:4",
              "text": "@notice The available protocols that are available to create facades from\n @dev Provide the index desired, and this returns a specific `Integration`\n @return A specific `Integration`, given a provided index"
            },
            "functionSelector": "f6fef21e",
            "id": 680,
            "mutability": "mutable",
            "name": "availableProtocols",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "926:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
              "typeString": "contract Integration[]"
            },
            "typeName": {
              "baseType": {
                "id": 678,
                "name": "Integration",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1063,
                "src": "926:11:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Integration_$1063",
                  "typeString": "contract Integration"
                }
              },
              "id": 679,
              "nodeType": "ArrayTypeName",
              "src": "926:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage_ptr",
                "typeString": "contract Integration[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 681,
              "nodeType": "StructuredDocumentation",
              "src": "976:267:4",
              "text": "TODO Improvement: Eventually make this an array\n @notice Provides a Facade, given a wallet address\n @dev This can be used to lookup any associated facade for an address. Currently mapping is 1:1\n @return A specific facacde for a given address"
            },
            "functionSelector": "ed73ab9c",
            "id": 685,
            "mutability": "mutable",
            "name": "facades",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1248:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
              "typeString": "mapping(address => contract Facade)"
            },
            "typeName": {
              "id": 684,
              "keyType": {
                "id": 682,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1256:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1248:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                "typeString": "mapping(address => contract Facade)"
              },
              "valueType": {
                "id": 683,
                "name": "Facade",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 669,
                "src": "1267:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Facade_$669",
                  "typeString": "contract Facade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 686,
              "nodeType": "StructuredDocumentation",
              "src": "1300:232:4",
              "text": "@notice All user addresses that have facades\n @dev This is an array that contains all addresses that have ever deployed a facade, even if the facade has been destroyed\n @return An address that has deployed a facade"
            },
            "functionSelector": "4015510f",
            "id": 689,
            "mutability": "mutable",
            "name": "facadeOwners",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1537:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 687,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1537:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 688,
              "nodeType": "ArrayTypeName",
              "src": "1537:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 690,
              "nodeType": "StructuredDocumentation",
              "src": "1577:291:4",
              "text": "@notice Determines whether a specific facade can be created or not\n @dev This is a circuit-breaker, and is used to track which `Integrations` are currently enabled / disabled\n @return whehter an `Integration` is enabled. The indeces match  exactly with `availableProtocols`"
            },
            "functionSelector": "b2d4a574",
            "id": 693,
            "mutability": "mutable",
            "name": "facadeEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1873:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bool_$dyn_storage",
              "typeString": "bool[]"
            },
            "typeName": {
              "baseType": {
                "id": 691,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1873:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              },
              "id": 692,
              "nodeType": "ArrayTypeName",
              "src": "1873:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                "typeString": "bool[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "2126:74:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 697,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2144:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2144:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 699,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "2158:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2144:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e657221",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67042a5b4e78742bb76c2192d241f07da3e2364fed2ba8683daf4d218370bbab",
                          "typeString": "literal_string \"Must be owner!\""
                        },
                        "value": "Must be owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67042a5b4e78742bb76c2192d241f07da3e2364fed2ba8683daf4d218370bbab",
                          "typeString": "literal_string \"Must be owner!\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2136:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:46:4"
                },
                {
                  "id": 704,
                  "nodeType": "PlaceholderStatement",
                  "src": "2192:1:4"
                }
              ]
            },
            "documentation": {
              "id": 694,
              "nodeType": "StructuredDocumentation",
              "src": "1911:191:4",
              "text": "@notice Checks to make sure only the contract owner (deployer) can call a specific function\n @dev The contract deployer has certain elevated permissions, which can be checked here."
            },
            "id": 706,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2123:2:4"
            },
            "src": "2107:93:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 707,
              "nodeType": "StructuredDocumentation",
              "src": "2206:310:4",
              "text": "@notice An event used to communicate that a new protocol `Integration` has been added to the `Generator`\n @dev Logs when a new `Integration` is available for use\n @param integrationAddress The address of the new `Integration`\n @param integrationIndex The index of the new `Integration`"
            },
            "id": 713,
            "name": "LogNewProtocolAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integrationAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2547:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integrationIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2575:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:51:4"
            },
            "src": "2521:77:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 714,
              "nodeType": "StructuredDocumentation",
              "src": "2604:406:4",
              "text": "@notice An event used to communicate that a new `Facade` has been deployed\n @dev States an address has now deployed a few `Facade` and provide enough info to perform lookups\n @param creator The address that created a `Facade`\n @param integrationIndex The index of the `Integration` used in the deployment\n @param pairIndex The index of the asset pair used for the deployment"
            },
            "id": 722,
            "name": "LogFacadeCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "3038:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integrationIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "3063:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3063:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pairIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "3086:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3086:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3037:64:4"
            },
            "src": "3015:87:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "3108:239:4",
              "text": "@notice An event used to communicate that a `Facade` has been destroyed from this `Generator` interface\n @dev Will fire an event when a `Facade` has been destroyed\n @param destroyer The address that destroyed the `Facade`"
            },
            "id": 727,
            "name": "LogFacadeDestroyed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destroyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "3377:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3376:27:4"
            },
            "src": "3352:52:4"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "3567:35:4",
              "statements": [
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 731,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "3577:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 732,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3585:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3585:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3577:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:18:4"
                }
              ]
            },
            "documentation": {
              "id": 728,
              "nodeType": "StructuredDocumentation",
              "src": "3414:134:4",
              "text": "@notice A simple constructor for deploying a `Generator`\n @dev Only handles setting up the owner from the deploying address"
            },
            "id": 737,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3564:2:4"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3567:0:4"
            },
            "scope": 895,
            "src": "3553:49:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "4103:384:4",
              "statements": [
                {
                  "assignments": [
                    748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 748,
                      "mutability": "mutable",
                      "name": "integration",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "4113:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Integration_$1063",
                        "typeString": "contract Integration"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "Integration",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1063,
                        "src": "4113:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 750,
                        "name": "newIntegration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "4151:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 749,
                      "name": "Integration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "4139:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Integration_$1063_$",
                        "typeString": "type(contract Integration)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4139:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Integration_$1063",
                      "typeString": "contract Integration"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4113:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "integration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4303:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "availableProtocols",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "4279:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
                          "typeString": "contract Integration[] storage ref"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4279:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Integration_$1063_$returns$__$",
                        "typeString": "function (contract Integration)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "4279:36:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4344:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 759,
                        "name": "facadeEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "4325:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4325:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:24:4"
                },
                {
                  "assignments": [
                    766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 766,
                      "mutability": "mutable",
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "4359:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 765,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4359:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 767,
                        "name": "availableProtocols",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "4372:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
                          "typeString": "contract Integration[] storage ref"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4372:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4400:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4372:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4359:42:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 773,
                        "name": "newIntegration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "4436:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 774,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "4452:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 772,
                      "name": "LogNewProtocolAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "4416:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "EmitStatement",
                  "src": "4411:47:4"
                },
                {
                  "expression": {
                    "id": 777,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 766,
                    "src": "4475:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "4468:12:4"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "3612:407:4",
              "text": "@notice The `owner` can add a new protocol to be used by the `Generator`\n @dev An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\n @param newIntegration The address of a deployed `Integration`\n @return The index associated with the new `Integration` address"
            },
            "functionSelector": "32194042",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 743,
                "modifierName": {
                  "id": 742,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 706,
                  "src": "4079:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4079:9:4"
              }
            ],
            "name": "addNewProtocol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "newIntegration",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "4048:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:24:4"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "4097:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4096:6:4"
            },
            "scope": 895,
            "src": "4024:463:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "5120:480:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 791,
                          "name": "facadeEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "5138:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                            "typeString": "bool[] storage ref"
                          }
                        },
                        "id": 793,
                        "indexExpression": {
                          "id": 792,
                          "name": "integrationIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "5152:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5138:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e746567726174696f6e2069732063757272656e746c792064697361626c65642e",
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_955aadd94b4d1cb8bae335ee10a042175fda0c640ca32d2452b19c5c3b627131",
                          "typeString": "literal_string \"This integration is currently disabled.\""
                        },
                        "value": "This integration is currently disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_955aadd94b4d1cb8bae335ee10a042175fda0c640ca32d2452b19c5c3b627131",
                          "typeString": "literal_string \"This integration is currently disabled.\""
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5130:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5130:83:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "5130:83:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 798,
                            "name": "facades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "5231:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                              "typeString": "mapping(address => contract Facade)"
                            }
                          },
                          "id": 801,
                          "indexExpression": {
                            "expression": {
                              "id": 799,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5239:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5239:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5231:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Facade_$669",
                            "typeString": "contract Facade"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5261:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 802,
                            "name": "Facade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "5254:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Facade_$669_$",
                              "typeString": "type(contract Facade)"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5254:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Facade_$669",
                            "typeString": "contract Facade"
                          }
                        },
                        "src": "5231:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46616361646520616c7265616479206372656174656420666f72207468697320616464726573732e",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5265:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_781ed80dd0b17ba5b28b438ae5def8afaf6e4e62a4b123324967f617bc55ba5d",
                          "typeString": "literal_string \"Facade already created for this address.\""
                        },
                        "value": "Facade already created for this address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_781ed80dd0b17ba5b28b438ae5def8afaf6e4e62a4b123324967f617bc55ba5d",
                          "typeString": "literal_string \"Facade already created for this address.\""
                        }
                      ],
                      "id": 797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5223:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5223:85:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "5223:85:4"
                },
                {
                  "assignments": [
                    810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "newFacade",
                      "nodeType": "VariableDeclaration",
                      "scope": 843,
                      "src": "5318:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "Facade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 669,
                        "src": "5318:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 819,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 815,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5393:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5393:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 817,
                        "name": "pairIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "5405:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 811,
                          "name": "availableProtocols",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "5337:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
                            "typeString": "contract Integration[] storage ref"
                          }
                        },
                        "id": 813,
                        "indexExpression": {
                          "id": 812,
                          "name": "integrationIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "5356:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5337:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deployUserInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "5337:55:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_contract$_Facade_$669_$",
                        "typeString": "function (address payable,uint256) external returns (contract Facade)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5337:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5318:97:4"
                },
                {
                  "expression": {
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 820,
                        "name": "facades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "5425:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                          "typeString": "mapping(address => contract Facade)"
                        }
                      },
                      "id": 823,
                      "indexExpression": {
                        "expression": {
                          "id": 821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5433:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5433:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5425:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 824,
                      "name": "newFacade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "5447:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      }
                    },
                    "src": "5425:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "5425:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5484:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5484:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 827,
                        "name": "facadeOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "5466:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5466:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5466:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "5466:29:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5527:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5527:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 837,
                        "name": "integrationIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "5539:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 838,
                        "name": "pairIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "5557:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 834,
                      "name": "LogFacadeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "5510:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5510:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "EmitStatement",
                  "src": "5505:62:4"
                },
                {
                  "expression": {
                    "id": 841,
                    "name": "newFacade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 810,
                    "src": "5584:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 842,
                  "nodeType": "Return",
                  "src": "5577:16:4"
                }
              ]
            },
            "documentation": {
              "id": 781,
              "nodeType": "StructuredDocumentation",
              "src": "4497:529:4",
              "text": "@notice The `owner` can add a new protocol to be used by the `Generator`\n @dev An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\n @param integrationIndex The index of a specific `Integration` to be deployed\n @param pairIndex The index of the asset pair, on a given `Integration`, that should be used for the deployed `Facade`\n @return The newly deployed `Facade` instance"
            },
            "functionSelector": "4da7eed1",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateNewFacade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "integrationIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "5058:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5058:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "pairIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "5081:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5081:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5057:39:4"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "5112:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Facade_$669",
                    "typeString": "contract Facade"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "Facade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 669,
                    "src": "5112:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5111:8:4"
            },
            "scope": 895,
            "src": "5031:569:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "5873:652:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "facades",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 685,
                          "src": "5926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                            "typeString": "mapping(address => contract Facade)"
                          }
                        },
                        "id": 851,
                        "indexExpression": {
                          "expression": {
                            "id": 849,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5934:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5934:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5926:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        }
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 644,
                      "src": "5926:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5926:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "5926:29:4"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5990:26:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 855,
                        "name": "facades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "5997:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                          "typeString": "mapping(address => contract Facade)"
                        }
                      },
                      "id": 858,
                      "indexExpression": {
                        "expression": {
                          "id": 856,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6005:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6005:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5997:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:26:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 862,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6045:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6045:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 861,
                      "name": "LogFacadeDestroyed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "6026:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6026:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "6026:30:4"
                }
              ]
            },
            "documentation": {
              "id": 845,
              "nodeType": "StructuredDocumentation",
              "src": "5606:230:4",
              "text": "@notice A function that attempts to destroy a `Facade`.\n @dev This is a public, unprotected function. However, the `Facade` implementation protects against unprotected deletion and will block any unauthorized deletions."
            },
            "functionSelector": "b0e1bd30",
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyFacade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5863:2:4"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5873:0:4"
            },
            "scope": 895,
            "src": "5841:684:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "6933:53:4",
              "statements": [
                {
                  "expression": {
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 877,
                        "name": "facadeEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "6943:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 879,
                      "indexExpression": {
                        "id": 878,
                        "name": "facadeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "6957:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6943:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 880,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "6972:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6943:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "6943:36:4"
                }
              ]
            },
            "documentation": {
              "id": 868,
              "nodeType": "StructuredDocumentation",
              "src": "6535:324:4",
              "text": "@notice Enables / Disables a specific facade deployment.\n @dev This only impacts the `Generators` control over deployments. \n @param facadeIndex The index of a specific facade that should have their deployment flag modified\n @param enabled Whether or not the given facade should be deployable or not"
            },
            "functionSelector": "e5c13dd1",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 875,
                "modifierName": {
                  "id": 874,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 706,
                  "src": "6923:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6923:9:4"
              }
            ],
            "name": "setEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "facadeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "6884:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6884:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "6902:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6902:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6883:32:4"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6933:0:4"
            },
            "scope": 895,
            "src": "6864:122:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "7271:43:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 890,
                      "name": "facadeOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "7288:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7288:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 889,
                  "id": 892,
                  "nodeType": "Return",
                  "src": "7281:26:4"
                }
              ]
            },
            "documentation": {
              "id": 885,
              "nodeType": "StructuredDocumentation",
              "src": "6996:218:4",
              "text": "@notice The number of owners that have created `Facades`\n @dev Provides the number of owners, which can be used to then query for all deployed `Facades`\n @return The number of facade owners that exist"
            },
            "functionSelector": "93fd1844",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfOwners",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7242:2:4"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "7265:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7265:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7264:6:4"
            },
            "scope": 895,
            "src": "7219:95:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 896,
        "src": "449:6867:4"
      }
    ],
    "src": "32:7285:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Generator.sol",
    "exportedSymbols": {
      "Generator": [
        895
      ]
    },
    "id": 896,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 671,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/metroid/Development/Block/Final_Project/contracts/Integrations/Integration.sol",
        "file": "./Integrations/Integration.sol",
        "id": 672,
        "nodeType": "ImportDirective",
        "scope": 896,
        "sourceUnit": 1064,
        "src": "57:40:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 673,
          "nodeType": "StructuredDocumentation",
          "src": "99:350:4",
          "text": "@title An interface that helps generate Facades on top of DeFi protocols\n @author Joel Reis\n @notice Use this contract to create accounts that work directly with common DeFi protocols, like Compound\n @dev This is a simple interface that abstracts most of the complexities of the underlying `Integrations` that handle actual deploymnets."
        },
        "fullyImplemented": true,
        "id": 895,
        "linearizedBaseContracts": [
          895
        ],
        "name": "Generator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 674,
              "nodeType": "StructuredDocumentation",
              "src": "479:182:4",
              "text": "@notice The owner of this contract\n @dev The owner of this contract, set from deployer and unchangable\n @return The address with the most authority on this contract"
            },
            "functionSelector": "8da5cb5b",
            "id": 676,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "666:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 675,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 677,
              "nodeType": "StructuredDocumentation",
              "src": "697:224:4",
              "text": "@notice The available protocols that are available to create facades from\n @dev Provide the index desired, and this returns a specific `Integration`\n @return A specific `Integration`, given a provided index"
            },
            "functionSelector": "f6fef21e",
            "id": 680,
            "mutability": "mutable",
            "name": "availableProtocols",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "926:39:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
              "typeString": "contract Integration[]"
            },
            "typeName": {
              "baseType": {
                "id": 678,
                "name": "Integration",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1063,
                "src": "926:11:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Integration_$1063",
                  "typeString": "contract Integration"
                }
              },
              "id": 679,
              "nodeType": "ArrayTypeName",
              "src": "926:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage_ptr",
                "typeString": "contract Integration[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 681,
              "nodeType": "StructuredDocumentation",
              "src": "976:267:4",
              "text": "TODO Improvement: Eventually make this an array\n @notice Provides a Facade, given a wallet address\n @dev This can be used to lookup any associated facade for an address. Currently mapping is 1:1\n @return A specific facacde for a given address"
            },
            "functionSelector": "ed73ab9c",
            "id": 685,
            "mutability": "mutable",
            "name": "facades",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1248:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
              "typeString": "mapping(address => contract Facade)"
            },
            "typeName": {
              "id": 684,
              "keyType": {
                "id": 682,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1256:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1248:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                "typeString": "mapping(address => contract Facade)"
              },
              "valueType": {
                "id": 683,
                "name": "Facade",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 669,
                "src": "1267:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Facade_$669",
                  "typeString": "contract Facade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 686,
              "nodeType": "StructuredDocumentation",
              "src": "1300:232:4",
              "text": "@notice All user addresses that have facades\n @dev This is an array that contains all addresses that have ever deployed a facade, even if the facade has been destroyed\n @return An address that has deployed a facade"
            },
            "functionSelector": "4015510f",
            "id": 689,
            "mutability": "mutable",
            "name": "facadeOwners",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1537:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 687,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1537:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 688,
              "nodeType": "ArrayTypeName",
              "src": "1537:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 690,
              "nodeType": "StructuredDocumentation",
              "src": "1577:291:4",
              "text": "@notice Determines whether a specific facade can be created or not\n @dev This is a circuit-breaker, and is used to track which `Integrations` are currently enabled / disabled\n @return whehter an `Integration` is enabled. The indeces match  exactly with `availableProtocols`"
            },
            "functionSelector": "b2d4a574",
            "id": 693,
            "mutability": "mutable",
            "name": "facadeEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 895,
            "src": "1873:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bool_$dyn_storage",
              "typeString": "bool[]"
            },
            "typeName": {
              "baseType": {
                "id": 691,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1873:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              },
              "id": 692,
              "nodeType": "ArrayTypeName",
              "src": "1873:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                "typeString": "bool[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "2126:74:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 697,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2144:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2144:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 699,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "2158:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2144:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e657221",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67042a5b4e78742bb76c2192d241f07da3e2364fed2ba8683daf4d218370bbab",
                          "typeString": "literal_string \"Must be owner!\""
                        },
                        "value": "Must be owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67042a5b4e78742bb76c2192d241f07da3e2364fed2ba8683daf4d218370bbab",
                          "typeString": "literal_string \"Must be owner!\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2136:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2136:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "2136:46:4"
                },
                {
                  "id": 704,
                  "nodeType": "PlaceholderStatement",
                  "src": "2192:1:4"
                }
              ]
            },
            "documentation": {
              "id": 694,
              "nodeType": "StructuredDocumentation",
              "src": "1911:191:4",
              "text": "@notice Checks to make sure only the contract owner (deployer) can call a specific function\n @dev The contract deployer has certain elevated permissions, which can be checked here."
            },
            "id": 706,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2123:2:4"
            },
            "src": "2107:93:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 707,
              "nodeType": "StructuredDocumentation",
              "src": "2206:310:4",
              "text": "@notice An event used to communicate that a new protocol `Integration` has been added to the `Generator`\n @dev Logs when a new `Integration` is available for use\n @param integrationAddress The address of the new `Integration`\n @param integrationIndex The index of the new `Integration`"
            },
            "id": 713,
            "name": "LogNewProtocolAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integrationAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2547:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integrationIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 713,
                  "src": "2575:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:51:4"
            },
            "src": "2521:77:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 714,
              "nodeType": "StructuredDocumentation",
              "src": "2604:406:4",
              "text": "@notice An event used to communicate that a new `Facade` has been deployed\n @dev States an address has now deployed a few `Facade` and provide enough info to perform lookups\n @param creator The address that created a `Facade`\n @param integrationIndex The index of the `Integration` used in the deployment\n @param pairIndex The index of the asset pair used for the deployment"
            },
            "id": 722,
            "name": "LogFacadeCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "3038:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 718,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integrationIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "3063:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3063:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pairIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "3086:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3086:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3037:64:4"
            },
            "src": "3015:87:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "3108:239:4",
              "text": "@notice An event used to communicate that a `Facade` has been destroyed from this `Generator` interface\n @dev Will fire an event when a `Facade` has been destroyed\n @param destroyer The address that destroyed the `Facade`"
            },
            "id": 727,
            "name": "LogFacadeDestroyed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destroyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "3377:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3376:27:4"
            },
            "src": "3352:52:4"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "3567:35:4",
              "statements": [
                {
                  "expression": {
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 731,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "3577:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 732,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3585:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3585:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3577:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:18:4"
                }
              ]
            },
            "documentation": {
              "id": 728,
              "nodeType": "StructuredDocumentation",
              "src": "3414:134:4",
              "text": "@notice A simple constructor for deploying a `Generator`\n @dev Only handles setting up the owner from the deploying address"
            },
            "id": 737,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3564:2:4"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3567:0:4"
            },
            "scope": 895,
            "src": "3553:49:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "4103:384:4",
              "statements": [
                {
                  "assignments": [
                    748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 748,
                      "mutability": "mutable",
                      "name": "integration",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "4113:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Integration_$1063",
                        "typeString": "contract Integration"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "Integration",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1063,
                        "src": "4113:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 750,
                        "name": "newIntegration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "4151:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 749,
                      "name": "Integration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1063,
                      "src": "4139:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Integration_$1063_$",
                        "typeString": "type(contract Integration)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4139:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Integration_$1063",
                      "typeString": "contract Integration"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4113:53:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "integration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "4303:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "availableProtocols",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "4279:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
                          "typeString": "contract Integration[] storage ref"
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4279:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Integration_$1063_$returns$__$",
                        "typeString": "function (contract Integration)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "4279:36:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4344:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 759,
                        "name": "facadeEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "4325:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4325:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4325:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "4325:24:4"
                },
                {
                  "assignments": [
                    766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 766,
                      "mutability": "mutable",
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "4359:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 765,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4359:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 767,
                        "name": "availableProtocols",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 680,
                        "src": "4372:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
                          "typeString": "contract Integration[] storage ref"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4372:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4400:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4372:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4359:42:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 773,
                        "name": "newIntegration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "4436:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 774,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "4452:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 772,
                      "name": "LogNewProtocolAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "4416:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "EmitStatement",
                  "src": "4411:47:4"
                },
                {
                  "expression": {
                    "id": 777,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 766,
                    "src": "4475:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "4468:12:4"
                }
              ]
            },
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "3612:407:4",
              "text": "@notice The `owner` can add a new protocol to be used by the `Generator`\n @dev An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\n @param newIntegration The address of a deployed `Integration`\n @return The index associated with the new `Integration` address"
            },
            "functionSelector": "32194042",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 743,
                "modifierName": {
                  "id": 742,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 706,
                  "src": "4079:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4079:9:4"
              }
            ],
            "name": "addNewProtocol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "newIntegration",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "4048:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:24:4"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "4097:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4096:6:4"
            },
            "scope": 895,
            "src": "4024:463:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "5120:480:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 791,
                          "name": "facadeEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "5138:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                            "typeString": "bool[] storage ref"
                          }
                        },
                        "id": 793,
                        "indexExpression": {
                          "id": 792,
                          "name": "integrationIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "5152:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5138:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e746567726174696f6e2069732063757272656e746c792064697361626c65642e",
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_955aadd94b4d1cb8bae335ee10a042175fda0c640ca32d2452b19c5c3b627131",
                          "typeString": "literal_string \"This integration is currently disabled.\""
                        },
                        "value": "This integration is currently disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_955aadd94b4d1cb8bae335ee10a042175fda0c640ca32d2452b19c5c3b627131",
                          "typeString": "literal_string \"This integration is currently disabled.\""
                        }
                      ],
                      "id": 790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5130:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5130:83:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "5130:83:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 798,
                            "name": "facades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "5231:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                              "typeString": "mapping(address => contract Facade)"
                            }
                          },
                          "id": 801,
                          "indexExpression": {
                            "expression": {
                              "id": 799,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5239:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5239:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5231:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Facade_$669",
                            "typeString": "contract Facade"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5261:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 802,
                            "name": "Facade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "5254:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Facade_$669_$",
                              "typeString": "type(contract Facade)"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5254:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Facade_$669",
                            "typeString": "contract Facade"
                          }
                        },
                        "src": "5231:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46616361646520616c7265616479206372656174656420666f72207468697320616464726573732e",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5265:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_781ed80dd0b17ba5b28b438ae5def8afaf6e4e62a4b123324967f617bc55ba5d",
                          "typeString": "literal_string \"Facade already created for this address.\""
                        },
                        "value": "Facade already created for this address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_781ed80dd0b17ba5b28b438ae5def8afaf6e4e62a4b123324967f617bc55ba5d",
                          "typeString": "literal_string \"Facade already created for this address.\""
                        }
                      ],
                      "id": 797,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5223:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5223:85:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "5223:85:4"
                },
                {
                  "assignments": [
                    810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "newFacade",
                      "nodeType": "VariableDeclaration",
                      "scope": 843,
                      "src": "5318:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "Facade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 669,
                        "src": "5318:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 819,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 815,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5393:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5393:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 817,
                        "name": "pairIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "5405:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 811,
                          "name": "availableProtocols",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 680,
                          "src": "5337:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Integration_$1063_$dyn_storage",
                            "typeString": "contract Integration[] storage ref"
                          }
                        },
                        "id": 813,
                        "indexExpression": {
                          "id": 812,
                          "name": "integrationIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "5356:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5337:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Integration_$1063",
                          "typeString": "contract Integration"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deployUserInstance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "5337:55:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_contract$_Facade_$669_$",
                        "typeString": "function (address payable,uint256) external returns (contract Facade)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5337:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5318:97:4"
                },
                {
                  "expression": {
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 820,
                        "name": "facades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "5425:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                          "typeString": "mapping(address => contract Facade)"
                        }
                      },
                      "id": 823,
                      "indexExpression": {
                        "expression": {
                          "id": 821,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5433:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5433:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5425:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 824,
                      "name": "newFacade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "5447:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      }
                    },
                    "src": "5425:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "id": 826,
                  "nodeType": "ExpressionStatement",
                  "src": "5425:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5484:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5484:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 827,
                        "name": "facadeOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "5466:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5466:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5466:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "5466:29:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5527:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5527:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 837,
                        "name": "integrationIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "5539:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 838,
                        "name": "pairIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "5557:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 834,
                      "name": "LogFacadeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "5510:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5510:57:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "EmitStatement",
                  "src": "5505:62:4"
                },
                {
                  "expression": {
                    "id": 841,
                    "name": "newFacade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 810,
                    "src": "5584:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 842,
                  "nodeType": "Return",
                  "src": "5577:16:4"
                }
              ]
            },
            "documentation": {
              "id": 781,
              "nodeType": "StructuredDocumentation",
              "src": "4497:529:4",
              "text": "@notice The `owner` can add a new protocol to be used by the `Generator`\n @dev An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`\n @param integrationIndex The index of a specific `Integration` to be deployed\n @param pairIndex The index of the asset pair, on a given `Integration`, that should be used for the deployed `Facade`\n @return The newly deployed `Facade` instance"
            },
            "functionSelector": "4da7eed1",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateNewFacade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "integrationIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "5058:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5058:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "pairIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "5081:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5081:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5057:39:4"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "5112:6:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Facade_$669",
                    "typeString": "contract Facade"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "Facade",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 669,
                    "src": "5112:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Facade_$669",
                      "typeString": "contract Facade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5111:8:4"
            },
            "scope": 895,
            "src": "5031:569:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "5873:652:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "facades",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 685,
                          "src": "5926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                            "typeString": "mapping(address => contract Facade)"
                          }
                        },
                        "id": 851,
                        "indexExpression": {
                          "expression": {
                            "id": 849,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5934:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5934:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5926:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Facade_$669",
                          "typeString": "contract Facade"
                        }
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "destroy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 644,
                      "src": "5926:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5926:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "5926:29:4"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5990:26:4",
                    "subExpression": {
                      "baseExpression": {
                        "id": 855,
                        "name": "facades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "5997:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Facade_$669_$",
                          "typeString": "mapping(address => contract Facade)"
                        }
                      },
                      "id": 858,
                      "indexExpression": {
                        "expression": {
                          "id": 856,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6005:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6005:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5997:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Facade_$669",
                        "typeString": "contract Facade"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "5990:26:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 862,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6045:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6045:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 861,
                      "name": "LogFacadeDestroyed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "6026:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6026:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "6026:30:4"
                }
              ]
            },
            "documentation": {
              "id": 845,
              "nodeType": "StructuredDocumentation",
              "src": "5606:230:4",
              "text": "@notice A function that attempts to destroy a `Facade`.\n @dev This is a public, unprotected function. However, the `Facade` implementation protects against unprotected deletion and will block any unauthorized deletions."
            },
            "functionSelector": "b0e1bd30",
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyFacade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5863:2:4"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5873:0:4"
            },
            "scope": 895,
            "src": "5841:684:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "6933:53:4",
              "statements": [
                {
                  "expression": {
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 877,
                        "name": "facadeEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "6943:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "id": 879,
                      "indexExpression": {
                        "id": 878,
                        "name": "facadeIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "6957:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6943:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 880,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "6972:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6943:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "6943:36:4"
                }
              ]
            },
            "documentation": {
              "id": 868,
              "nodeType": "StructuredDocumentation",
              "src": "6535:324:4",
              "text": "@notice Enables / Disables a specific facade deployment.\n @dev This only impacts the `Generators` control over deployments. \n @param facadeIndex The index of a specific facade that should have their deployment flag modified\n @param enabled Whether or not the given facade should be deployable or not"
            },
            "functionSelector": "e5c13dd1",
            "id": 884,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 875,
                "modifierName": {
                  "id": 874,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 706,
                  "src": "6923:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6923:9:4"
              }
            ],
            "name": "setEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "facadeIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "6884:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6884:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "6902:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6902:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6883:32:4"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6933:0:4"
            },
            "scope": 895,
            "src": "6864:122:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "7271:43:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 890,
                      "name": "facadeOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "7288:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7288:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 889,
                  "id": 892,
                  "nodeType": "Return",
                  "src": "7281:26:4"
                }
              ]
            },
            "documentation": {
              "id": 885,
              "nodeType": "StructuredDocumentation",
              "src": "6996:218:4",
              "text": "@notice The number of owners that have created `Facades`\n @dev Provides the number of owners, which can be used to then query for all deployed `Facades`\n @return The number of facade owners that exist"
            },
            "functionSelector": "93fd1844",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfOwners",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7242:2:4"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "7265:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7265:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7264:6:4"
            },
            "scope": 895,
            "src": "7219:95:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 896,
        "src": "449:6867:4"
      }
    ],
    "src": "32:7285:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xaa32d4f15a1563b86f6831eae2480337bb927156064da9150864e571197edb62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "name": "FacadeCreated",
          "type": "event"
        },
        "0x1666dc58e6d8f7df989c5e292400ea7c2ab7b07f8f4e29bbeb3dc1b107545bbb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "name": "LogFacadeCreated",
          "type": "event"
        },
        "0xe7f1400f46d4a6013c1f7719189567e1679a57db059c342976ec5ea9f381ac5d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "destroyer",
              "type": "address"
            }
          ],
          "name": "LogFacadeDestroyed",
          "type": "event"
        },
        "0x693a944cb01572a0441324e4d5bea42803a4c51786b9e31ccd2719c6ba35fb3f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "integrationIndex",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            }
          ],
          "name": "LogFacadeCreated",
          "type": "event"
        },
        "0x54440a43c9b4c7e5c5755bdf2d640c903a6949e2dad6fb7770b5599ea4f6d127": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "integrationAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "integrationIndex",
              "type": "uint256"
            }
          ],
          "name": "LogNewProtocolAdded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xbE5ba6548baEB68ce16D480BDE161604F44f6157",
      "transactionHash": "0xee5780574f1e7797d3272d1794ade84f5fb6fd735ba454dea1f9fe0af0884ce5"
    },
    "5777": {
      "events": {
        "0x1666dc58e6d8f7df989c5e292400ea7c2ab7b07f8f4e29bbeb3dc1b107545bbb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "name": "LogFacadeCreated",
          "type": "event"
        },
        "0xe7f1400f46d4a6013c1f7719189567e1679a57db059c342976ec5ea9f381ac5d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "destroyer",
              "type": "address"
            }
          ],
          "name": "LogFacadeDestroyed",
          "type": "event"
        },
        "0x693a944cb01572a0441324e4d5bea42803a4c51786b9e31ccd2719c6ba35fb3f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "integrationIndex",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "pairIndex",
              "type": "uint256"
            }
          ],
          "name": "LogFacadeCreated",
          "type": "event"
        },
        "0x54440a43c9b4c7e5c5755bdf2d640c903a6949e2dad6fb7770b5599ea4f6d127": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "integrationAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "integrationIndex",
              "type": "uint256"
            }
          ],
          "name": "LogNewProtocolAdded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB8ceB79DC1fC78E02f80df539471fC318CC5A8a4",
      "transactionHash": "0x7ad97a121269fd368b951ec4f033002b2ca42d18ee7b07b7f77380c33800fe90"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-14T20:14:58.435Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Joel Reis",
    "details": "This is a simple interface that abstracts most of the complexities of the underlying `Integrations` that handle actual deploymnets.",
    "events": {
      "LogFacadeCreated(address,uint256,uint256)": {
        "details": "States an address has now deployed a few `Facade` and provide enough info to perform lookups",
        "params": {
          "creator": "The address that created a `Facade`",
          "integrationIndex": "The index of the `Integration` used in the deployment",
          "pairIndex": "The index of the asset pair used for the deployment"
        }
      },
      "LogFacadeDestroyed(address)": {
        "details": "Will fire an event when a `Facade` has been destroyed",
        "params": {
          "destroyer": "The address that destroyed the `Facade`"
        }
      },
      "LogNewProtocolAdded(address,uint256)": {
        "details": "Logs when a new `Integration` is available for use",
        "params": {
          "integrationAddress": "The address of the new `Integration`",
          "integrationIndex": "The index of the new `Integration`"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addNewProtocol(address)": {
        "details": "An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`",
        "params": {
          "newIntegration": "The address of a deployed `Integration`"
        },
        "returns": {
          "_0": "The index associated with the new `Integration` address"
        }
      },
      "constructor": {
        "details": "Only handles setting up the owner from the deploying address"
      },
      "destroyFacade()": {
        "details": "This is a public, unprotected function. However, the `Facade` implementation protects against unprotected deletion and will block any unauthorized deletions."
      },
      "generateNewFacade(uint256,uint256)": {
        "details": "An `Integration` must be manually deployed, and then the address is provided here to provide a link. This then allows wallets to create facade's against this new `Integration`",
        "params": {
          "integrationIndex": "The index of a specific `Integration` to be deployed",
          "pairIndex": "The index of the asset pair, on a given `Integration`, that should be used for the deployed `Facade`"
        },
        "returns": {
          "_0": "The newly deployed `Facade` instance"
        }
      },
      "numberOfOwners()": {
        "details": "Provides the number of owners, which can be used to then query for all deployed `Facades`",
        "returns": {
          "_0": "The number of facade owners that exist"
        }
      },
      "setEnabled(uint256,bool)": {
        "details": "This only impacts the `Generators` control over deployments. ",
        "params": {
          "enabled": "Whether or not the given facade should be deployable or not",
          "facadeIndex": "The index of a specific facade that should have their deployment flag modified"
        }
      }
    },
    "stateVariables": {
      "availableProtocols": {
        "details": "Provide the index desired, and this returns a specific `Integration`",
        "return": "A specific `Integration`, given a provided index"
      },
      "facadeEnabled": {
        "details": "This is a circuit-breaker, and is used to track which `Integrations` are currently enabled / disabled",
        "return": "whehter an `Integration` is enabled. The indeces match  exactly with `availableProtocols`"
      },
      "facadeOwners": {
        "details": "This is an array that contains all addresses that have ever deployed a facade, even if the facade has been destroyed",
        "return": "An address that has deployed a facade"
      },
      "facades": {
        "details": "This can be used to lookup any associated facade for an address. Currently mapping is 1:1",
        "return": "A specific facacde for a given address"
      },
      "owner": {
        "details": "The owner of this contract, set from deployer and unchangable",
        "return": "The address with the most authority on this contract"
      }
    },
    "title": "An interface that helps generate Facades on top of DeFi protocols",
    "version": 1
  },
  "userdoc": {
    "events": {
      "LogFacadeCreated(address,uint256,uint256)": {
        "notice": "An event used to communicate that a new `Facade` has been deployed"
      },
      "LogFacadeDestroyed(address)": {
        "notice": "An event used to communicate that a `Facade` has been destroyed from this `Generator` interface"
      },
      "LogNewProtocolAdded(address,uint256)": {
        "notice": "An event used to communicate that a new protocol `Integration` has been added to the `Generator`"
      }
    },
    "kind": "user",
    "methods": {
      "addNewProtocol(address)": {
        "notice": "The `owner` can add a new protocol to be used by the `Generator`"
      },
      "availableProtocols(uint256)": {
        "notice": "The available protocols that are available to create facades from"
      },
      "constructor": {
        "notice": "A simple constructor for deploying a `Generator`"
      },
      "destroyFacade()": {
        "notice": "A function that attempts to destroy a `Facade`."
      },
      "facadeEnabled(uint256)": {
        "notice": "Determines whether a specific facade can be created or not"
      },
      "facadeOwners(uint256)": {
        "notice": "All user addresses that have facades"
      },
      "facades(address)": {
        "notice": "TODO Improvement: Eventually make this an arrayProvides a Facade, given a wallet address"
      },
      "generateNewFacade(uint256,uint256)": {
        "notice": "The `owner` can add a new protocol to be used by the `Generator`"
      },
      "numberOfOwners()": {
        "notice": "The number of owners that have created `Facades`"
      },
      "owner()": {
        "notice": "The owner of this contract"
      },
      "setEnabled(uint256,bool)": {
        "notice": "Enables / Disables a specific facade deployment."
      }
    },
    "notice": "Use this contract to create accounts that work directly with common DeFi protocols, like Compound",
    "version": 1
  }
}