{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "_underlyingAsset",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "_mintingAsset",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "facade",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "depositor",
						"type": "address"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "facade",
						"type": "address"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "assistant",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositToUnderlying",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "destroy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumUnderlyingForDeposit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mintedAssetSymbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mintedBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "mintingAsset",
				"outputs": [
					{
						"internalType": "contract ERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAssistant",
						"type": "address"
					}
				],
				"name": "setAssistant",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "underlyingAsset",
				"outputs": [
					{
						"internalType": "contract ERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "underlyingAssetSymbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "underlyingBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"assistant()": {
					"notice": "An address that is allowed to assist in certain functions to help with automation This address never has full control over funds e.g. sending funds back to `owner`'s wallet."
				},
				"depositToUnderlying()": {
					"notice": "This deposits funds into the underlying contract"
				},
				"destroy()": {
					"notice": "Destroys the facade and transfers all funds to user wallet"
				},
				"minimumUnderlyingForDeposit()": {
					"notice": "The amount required before a deposit will be approved"
				},
				"mintedAssetSymbol()": {
					"notice": "Returns the symbol for the minted token that is available for withdrawing This is available directly on the asset address, but providing a convenience function e.g. cUSDC, cDAI"
				},
				"mintedBalance()": {
					"notice": "Returns the amount of the minted balance that is available for withdrawing e.g. cUSDC, cDAI"
				},
				"mintingAsset()": {
					"notice": "The address of the token being minted e.g. cUSDC address"
				},
				"owner()": {
					"notice": "The owner of the specific account instance"
				},
				"underlyingAsset()": {
					"notice": "The address of the underlying token e.g. USDC address"
				},
				"underlyingAssetSymbol()": {
					"notice": "Returns the symbol for the underlying token that is available for deposit This is available directly on the asset address, but providing a convenience function e.g. USDC, DAI"
				},
				"underlyingBalance()": {
					"notice": "Returns the amount of the underlying token that is available for deposit e.g. USDC, DAI"
				},
				"withdraw()": {
					"notice": "Withdraws funds from underlying contract, to EOA e.g. Comound -> Account -> EOA"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/Facades/CompoundFacade.sol": "CompoundFacade"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/ERC20/IERC20.sol": {
			"keccak256": "0x6e10e93f99a4376805223abc135e394de4631ec31f5bab207a6c6b3dabe7b42d",
			"license": "MIT",
			"urls": [
				"bzz-raw://96d84f66fa98d3fe5c635a96b8cca93a64266bc6beb9173f161ba7741ba83459",
				"dweb:/ipfs/QmYpiX9CaiQnUBq2niE45WCHeCqTX18igiWcnTNQqcoYwa"
			]
		},
		"localhost/contracts/Facades/CompoundFacade.sol": {
			"keccak256": "0xd42c9da50ab753e99871e34a931aa4d5682e59f8de40c0c305e1c7d0d68734c3",
			"license": "MIT",
			"urls": [
				"bzz-raw://174425f5e4fc4b60704b48be2141d1e458ac924ec1c10f1bad8524c43b9fb6a2",
				"dweb:/ipfs/Qmek4pka1f7zQfPLFyfGxk78fj3ifFwj5eae8gaRighCEL"
			]
		},
		"localhost/contracts/Facades/FacadeInterface.sol": {
			"keccak256": "0xe47376935d32e4f177e7ac0b9a968dd6b7a01ce5be9473b61f50205d4fa603a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://58886f401a222ef6defa7a74dadc02dd9805e77620102c22c37508e8b79c9b2d",
				"dweb:/ipfs/QmaJjrFyP5HBHCKEKS35qU85VYsy38kD5xCUAked5Cmitx"
			]
		}
	},
	"version": 1
}