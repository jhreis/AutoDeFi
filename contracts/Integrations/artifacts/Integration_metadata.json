{
	"compiler": {
		"version": "0.7.4+commit.3f05b770"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "LogAddedPair",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "underlyingAssetAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "mintingAssetAddress",
						"type": "address"
					}
				],
				"name": "addAvailablePair",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "availablePairs",
				"outputs": [
					{
						"internalType": "contract ERC20",
						"name": "underlyingAsset",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "mintingAsset",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "pairIndex",
						"type": "uint256"
					}
				],
				"name": "deployUserInstance",
				"outputs": [
					{
						"internalType": "contract Facade",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "description",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Joel Reis",
			"details": "This class must be overwritten and the abstract functions implemented by the child",
			"events": {
				"LogAddedPair(uint256)": {
					"details": "Logs when a new asset `Pair` is added to this specific `Integration`",
					"params": {
						"index": "The index of the newly added asset `Pair`"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"addAvailablePair(address,address)": {
					"details": "Accepts two address, that are used to construct an asset pair and stored as an option on this `Integration`",
					"params": {
						"mintingAssetAddress": "The address for the minting asset to be used (e.g. `cUSDC`)",
						"underlyingAssetAddress": "The address for the underlying asset to be used (e.g. `USDC`)"
					},
					"returns": {
						"_0": "A new index for the associated `Pair` that was just added"
					}
				},
				"constructor": {
					"details": "Only handles setting up the owner from the deploying address"
				},
				"deployUserInstance(address,uint256)": {
					"details": "Accepts information for deploying a new `Facade` (e.g. `CompoundFacade`)",
					"params": {
						"_owner": "The address that will be the owner on the new deployment",
						"pairIndex": "The index associated with a specific asset `Pair`"
					},
					"returns": {
						"_0": "A newly deployed `Facade` instance"
					}
				},
				"description()": {
					"details": "Should provide a human-readable string that gives a short description what this `Integration` is (e.g. `Compound Protocol`)",
					"returns": {
						"_0": "A human-readable string that describes the `Integration` deployed"
					}
				}
			},
			"stateVariables": {
				"availablePairs": {
					"details": "Each `Integration` has a unique set of asset pairs that are contained here",
					"return": "A specific asset `Pair`"
				},
				"owner": {
					"details": "The owner of this contract, set from deployer and unchangable",
					"return": "The address with the most authority on this contract"
				}
			},
			"title": "An `Integration` for deploying `Facades`",
			"version": 1
		},
		"userdoc": {
			"events": {
				"LogAddedPair(uint256)": {
					"notice": "An event used to communicate that a new asset `Pair` was added"
				}
			},
			"kind": "user",
			"methods": {
				"addAvailablePair(address,address)": {
					"notice": "Adds a new asset `Pair`"
				},
				"availablePairs(uint256)": {
					"notice": "All available asset pairs for this `Integration`"
				},
				"constructor": {
					"notice": "A simple constructor for deploying an `Integration`"
				},
				"deployUserInstance(address,uint256)": {
					"notice": "Deploys a new `Facade`"
				},
				"description()": {
					"notice": "The description of an `Integration`"
				},
				"owner()": {
					"notice": "The owner of this contract"
				}
			},
			"notice": "Defines an `Integration` for deploying `Facades`",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/Integrations/Integration.sol": "Integration"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/ERC20/IERC20.sol": {
			"keccak256": "0x6bf31f9696663b072577ea8d27c036c61dead4f4e708abe651a37a9eef6616e5",
			"license": "MIT",
			"urls": [
				"bzz-raw://781a75a19e604e0c02258ac6866de98a76768b12ddf29c06422871fd5c81fa56",
				"dweb:/ipfs/QmaUsTPLTVD4U6AGvm5wEjrqH5Sh6As6XQQp3PEtVzbT9e"
			]
		},
		"localhost/Facades/FacadeInterface.sol": {
			"keccak256": "0xbb8bf70cbec66a32707e20d8d3c487d85044a34bb1ebe3d6a2422817aaf75d7f",
			"license": "MIT",
			"urls": [
				"bzz-raw://fdb3a1cc7f3150b973d8761ef67bd882139c89ee9c2684e360c09ecd070ed1e7",
				"dweb:/ipfs/Qmaaw7tgbMMH4SY8WTBAvn7sP5kzoe5UususTus3yoqBob"
			]
		},
		"localhost/Integrations/Integration.sol": {
			"keccak256": "0xd3d0060761060796e5bca0ca9de52a36d0da8107be578b093e04c4dce42507e8",
			"license": "MIT",
			"urls": [
				"bzz-raw://d8c5ebcd85245f27a1cad60ef0d5868c4396f0a1c906679c657273d7e2cc0b22",
				"dweb:/ipfs/QmW56VNUs43Xhz3hRZotQ7aW9FVa4dctifzFFNTKTJM5wJ"
			]
		}
	},
	"version": 1
}